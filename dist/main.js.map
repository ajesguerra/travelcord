{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.ts","webpack:///./src/app/components/activity/activity-details/activity-details.component.css","webpack:///./src/app/components/activity/activity-details/activity-details.component.html","webpack:///./src/app/components/activity/activity-details/activity-details.component.ts","webpack:///./src/app/components/activity/activity-edit/activity-edit.component.css","webpack:///./src/app/components/activity/activity-edit/activity-edit.component.html","webpack:///./src/app/components/activity/activity-edit/activity-edit.component.ts","webpack:///./src/app/components/activity/activity-list/activity-list.component.css","webpack:///./src/app/components/activity/activity-list/activity-list.component.html","webpack:///./src/app/components/activity/activity-list/activity-list.component.ts","webpack:///./src/app/components/activity/activity-new/activity-new.component.css","webpack:///./src/app/components/activity/activity-new/activity-new.component.html","webpack:///./src/app/components/activity/activity-new/activity-new.component.ts","webpack:///./src/app/components/activity/activitysuggestion-edit/activitysuggestion-edit.component.css","webpack:///./src/app/components/activity/activitysuggestion-edit/activitysuggestion-edit.component.html","webpack:///./src/app/components/activity/activitysuggestion-edit/activitysuggestion-edit.component.ts","webpack:///./src/app/components/activity/activitysuggestion-list/activitysuggestion-list.component.css","webpack:///./src/app/components/activity/activitysuggestion-list/activitysuggestion-list.component.html","webpack:///./src/app/components/activity/activitysuggestion-list/activitysuggestion-list.component.ts","webpack:///./src/app/components/activity/activitysuggestion-new/activitysuggestion-new.component.css","webpack:///./src/app/components/activity/activitysuggestion-new/activitysuggestion-new.component.html","webpack:///./src/app/components/activity/activitysuggestion-new/activitysuggestion-new.component.ts","webpack:///./src/app/components/admin/admin-main/admin-main.component.css","webpack:///./src/app/components/admin/admin-main/admin-main.component.html","webpack:///./src/app/components/admin/admin-main/admin-main.component.ts","webpack:///./src/app/components/admin/user-create/user-create.component.css","webpack:///./src/app/components/admin/user-create/user-create.component.html","webpack:///./src/app/components/admin/user-create/user-create.component.ts","webpack:///./src/app/components/admin/user-edit/user-edit.component.css","webpack:///./src/app/components/admin/user-edit/user-edit.component.html","webpack:///./src/app/components/admin/user-edit/user-edit.component.ts","webpack:///./src/app/components/event/event-browse/event-browse.component.css","webpack:///./src/app/components/event/event-browse/event-browse.component.html","webpack:///./src/app/components/event/event-browse/event-browse.component.ts","webpack:///./src/app/components/event/event-details/event-details.component.css","webpack:///./src/app/components/event/event-details/event-details.component.html","webpack:///./src/app/components/event/event-details/event-details.component.ts","webpack:///./src/app/components/event/event-edit/event-edit.component.css","webpack:///./src/app/components/event/event-edit/event-edit.component.html","webpack:///./src/app/components/event/event-edit/event-edit.component.ts","webpack:///./src/app/components/event/event-list/event-list.component.css","webpack:///./src/app/components/event/event-list/event-list.component.html","webpack:///./src/app/components/event/event-list/event-list.component.ts","webpack:///./src/app/components/event/event-new/event-new.component.css","webpack:///./src/app/components/event/event-new/event-new.component.html","webpack:///./src/app/components/event/event-new/event-new.component.ts","webpack:///./src/app/components/footer/footer.component.css","webpack:///./src/app/components/footer/footer.component.html","webpack:///./src/app/components/footer/footer.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/homepage/homepage.component.css","webpack:///./src/app/components/homepage/homepage.component.html","webpack:///./src/app/components/homepage/homepage.component.ts","webpack:///./src/app/components/marketer/profile/profile.component.css","webpack:///./src/app/components/marketer/profile/profile.component.html","webpack:///./src/app/components/marketer/profile/profile.component.ts","webpack:///./src/app/components/placestest/placestest.component.css","webpack:///./src/app/components/placestest/placestest.component.html","webpack:///./src/app/components/placestest/placestest.component.ts","webpack:///./src/app/components/promotion/promotion-edit/promotion-edit.component.css","webpack:///./src/app/components/promotion/promotion-edit/promotion-edit.component.html","webpack:///./src/app/components/promotion/promotion-edit/promotion-edit.component.ts","webpack:///./src/app/components/promotion/promotion-list/promotion-list.component.css","webpack:///./src/app/components/promotion/promotion-list/promotion-list.component.html","webpack:///./src/app/components/promotion/promotion-list/promotion-list.component.ts","webpack:///./src/app/components/promotion/promotion-new/promotion-new.component.css","webpack:///./src/app/components/promotion/promotion-new/promotion-new.component.html","webpack:///./src/app/components/promotion/promotion-new/promotion-new.component.ts","webpack:///./src/app/components/test/test.component.css","webpack:///./src/app/components/test/test.component.html","webpack:///./src/app/components/test/test.component.ts","webpack:///./src/app/components/travelers/prompt-to-login-or-register/prompt-to-login-or-register.component.css","webpack:///./src/app/components/travelers/prompt-to-login-or-register/prompt-to-login-or-register.component.html","webpack:///./src/app/components/travelers/prompt-to-login-or-register/prompt-to-login-or-register.component.ts","webpack:///./src/app/components/travelers/search-travelers/search-travelers.component.css","webpack:///./src/app/components/travelers/search-travelers/search-travelers.component.html","webpack:///./src/app/components/travelers/search-travelers/search-travelers.component.ts","webpack:///./src/app/components/travelers/view-following/view-following.component.css","webpack:///./src/app/components/travelers/view-following/view-following.component.html","webpack:///./src/app/components/travelers/view-following/view-following.component.ts","webpack:///./src/app/components/travelers/view-travelers/view-travelers.component.css","webpack:///./src/app/components/travelers/view-travelers/view-travelers.component.html","webpack:///./src/app/components/travelers/view-travelers/view-travelers.component.ts","webpack:///./src/app/components/user/login/login.component.css","webpack:///./src/app/components/user/login/login.component.html","webpack:///./src/app/components/user/login/login.component.ts","webpack:///./src/app/components/user/main/main.component.css","webpack:///./src/app/components/user/main/main.component.html","webpack:///./src/app/components/user/main/main.component.ts","webpack:///./src/app/components/user/profile/profile.component.css","webpack:///./src/app/components/user/profile/profile.component.html","webpack:///./src/app/components/user/profile/profile.component.ts","webpack:///./src/app/components/user/register/register.component.css","webpack:///./src/app/components/user/register/register.component.html","webpack:///./src/app/components/user/register/register.component.ts","webpack:///./src/app/services/activities.service.client.ts","webpack:///./src/app/services/admin.service.client.ts","webpack:///./src/app/services/all-users-guard.service.ts","webpack:///./src/app/services/auth-guard.service.ts","webpack:///./src/app/services/event.service.client.ts","webpack:///./src/app/services/marketer.service.client.ts","webpack:///./src/app/services/place.service.client.ts","webpack:///./src/app/services/promotion.service.client.ts","webpack:///./src/app/services/shared.service.client.ts","webpack:///./src/app/services/suggestion.service.client.ts","webpack:///./src/app/services/test.service.client.ts","webpack:///./src/app/services/traveler.service.client.ts","webpack:///./src/app/services/user.service.client.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n\n  hello: String = 'hello from app.component.ts';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './components/home/home.component';\nimport { TestComponent } from './components/test/test.component';\nimport {Routing} from './app.routing';\nimport {HttpModule} from '@angular/http';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {TestService} from './services/test.service.client';\nimport { LoginComponent } from './components/user/login/login.component';\nimport { ProfileComponent } from './components/user/profile/profile.component';\nimport { RegisterComponent } from './components/user/register/register.component';\nimport { UserService } from './services/user.service.client';\nimport { PlacestestComponent } from './components/placestest/placestest.component';\nimport {PlaceService} from './services/place.service.client';\nimport { AgmCoreModule } from '@agm/core';\nimport {TravelerService} from './services/traveler.service.client';\nimport {EventService} from './services/event.service.client';\nimport {EventListComponent} from './components/event/event-list/event-list.component';\nimport { EventNewComponent } from './components/event/event-new/event-new.component';\nimport { ActivityListComponent } from './components/activity/activity-list/activity-list.component';\nimport { ActivityNewComponent } from './components/activity/activity-new/activity-new.component';\nimport { ActivitysuggestionNewComponent } from './components/activity/activitysuggestion-new/activitysuggestion-new.component';\nimport { ActivitysuggestionListComponent } from './components/activity/activitysuggestion-list/activitysuggestion-list.component';\nimport {SharedService} from './services/shared.service.client';\nimport {AuthGuard} from './services/auth-guard.service';\nimport {ActivitiesService} from './services/activities.service.client';\nimport {ViewTravelersComponent} from './components/travelers/view-travelers/view-travelers.component';\nimport { ViewFollowingComponent } from './components/travelers/view-following/view-following.component';\nimport { MainComponent } from './components/user/main/main.component';\nimport { SearchTravelersComponent } from './components/travelers/search-travelers/search-travelers.component';\nimport { EventBrowseComponent } from './components/event/event-browse/event-browse.component';\nimport { EventDetailsComponent } from './components/event/event-details/event-details.component';\nimport { ActivityDetailsComponent } from './components/activity/activity-details/activity-details.component';\nimport { EventEditComponent } from './components/event/event-edit/event-edit.component';\nimport { ActivityEditComponent } from './components/activity/activity-edit/activity-edit.component';\nimport { ActivitysuggestionEditComponent } from './components/activity/activitysuggestion-edit/activitysuggestion-edit.component';\nimport {SuggestionService} from './services/suggestion.service.client';\nimport { PromptToLoginOrRegisterComponent } from './components/travelers/prompt-to-login-or-register/prompt-to-login-or-register.component';\nimport { PromotionEditComponent } from './components/promotion/promotion-edit/promotion-edit.component';\nimport { PromotionNewComponent } from './components/promotion/promotion-new/promotion-new.component';\nimport { PromotionListComponent } from './components/promotion/promotion-list/promotion-list.component';\nimport {PromotionService} from './services/promotion.service.client';\nimport {ProfileMarketerComponent} from './components/marketer/profile/profile.component';\nimport {AdminServiceClient} from './services/admin.service.client';\nimport {MarketerServiceClient} from './services/marketer.service.client';\nimport {AllUsersGuardService} from './services/all-users-guard.service';\nimport { AdminMainComponent } from './components/admin/admin-main/admin-main.component';\nimport { HomepageComponent } from './components/homepage/homepage.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { UserEditComponent } from './components/admin/user-edit/user-edit.component';\nimport {UserCreateComponent} from './components/admin/user-create/user-create.component';\n\n\n@NgModule({\n  // Declare components here\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    TestComponent,\n    LoginComponent,\n    ProfileComponent,\n    RegisterComponent,\n    PlacestestComponent,\n    EventListComponent,\n    EventNewComponent,\n    ActivityListComponent,\n    ActivityNewComponent,\n    ActivitysuggestionNewComponent,\n    ActivitysuggestionListComponent,\n    ViewTravelersComponent,\n    ViewFollowingComponent,\n    MainComponent,\n    SearchTravelersComponent,\n    EventBrowseComponent,\n    EventDetailsComponent,\n    ActivityDetailsComponent,\n    EventEditComponent,\n    ActivityEditComponent,\n    ActivitysuggestionEditComponent,\n    PromptToLoginOrRegisterComponent,\n    PromotionEditComponent,\n    PromotionNewComponent,\n    PromotionListComponent,\n    ProfileMarketerComponent,\n    AdminMainComponent,\n    HomepageComponent,\n    FooterComponent,\n    UserEditComponent,\n    UserCreateComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule,\n    Routing,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyArbhF-owYmnIdhp4hXlxG-nCRUxc0HF2c', // PUT INTO ENV VARIABLE!!\n      libraries: ['places']\n    }),\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  // Client Side services here\n  providers: [TestService,\n    UserService,\n    TravelerService,\n    PlaceService,\n    EventService,\n    SharedService,\n    AuthGuard,\n    AllUsersGuardService,\n    AdminServiceClient,\n    MarketerServiceClient,\n    ActivitiesService,\n    SuggestionService,\n    PromotionService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Routes, RouterModule} from '@angular/router';\nimport {ModuleWithProviders} from '@angular/core';\nimport {LoginComponent} from './components/user/login/login.component';\nimport {RegisterComponent} from './components/user/register/register.component';\nimport {ProfileComponent} from './components/user/profile/profile.component';\nimport {TestComponent} from './components/test/test.component';\nimport {PlacestestComponent} from './components/placestest/placestest.component';\nimport {EventListComponent} from './components/event/event-list/event-list.component';\nimport {EventNewComponent} from './components/event/event-new/event-new.component';\nimport {ActivityListComponent} from './components/activity/activity-list/activity-list.component';\nimport {AuthGuard} from './services/auth-guard.service';\nimport {ViewTravelersComponent} from './components/travelers/view-travelers/view-travelers.component';\nimport {ActivityNewComponent} from './components/activity/activity-new/activity-new.component';\nimport {ActivitysuggestionListComponent} from './components/activity/activitysuggestion-list/activitysuggestion-list.component';\nimport {ActivitysuggestionNewComponent} from './components/activity/activitysuggestion-new/activitysuggestion-new.component';\nimport {ViewFollowingComponent} from './components/travelers/view-following/view-following.component';\nimport {MainComponent} from './components/user/main/main.component';\nimport {ActivitysuggestionEditComponent} from './components/activity/activitysuggestion-edit/activitysuggestion-edit.component';\nimport {EventBrowseComponent} from './components/event/event-browse/event-browse.component';\nimport {ProfileMarketerComponent} from './components/marketer/profile/profile.component';\nimport {AdminServiceClient} from './services/admin.service.client';\nimport {MarketerServiceClient} from './services/marketer.service.client';\nimport {AllUsersGuardService} from './services/all-users-guard.service';\nimport {PromotionNewComponent} from './components/promotion/promotion-new/promotion-new.component';\nimport {PromotionEditComponent} from './components/promotion/promotion-edit/promotion-edit.component';\nimport {AdminMainComponent} from './components/admin/admin-main/admin-main.component';\nimport {HomeComponent} from './components/home/home.component';\nimport {HomepageComponent} from './components/homepage/homepage.component';\nimport {UserEditComponent} from './components/admin/user-edit/user-edit.component';\nimport {UserCreateComponent} from './components/admin/user-create/user-create.component';\n\nconst APP_ROUTES: Routes = [\n  { path : 'places' , component: PlacestestComponent},\n  { path : '' , component: HomepageComponent},\n  { path : 'test', component: TestComponent},\n  { path : 'login' , component: LoginComponent},\n  { path : 'main' , component: MainComponent},\n  { path : 'register' , component: RegisterComponent},\n  { path : 'travelcord' , component: HomeComponent},\n  { path : 'traveler' , component: ProfileComponent, canActivate: [AllUsersGuardService]},\n  { path : 'admin' , component: AdminMainComponent, canActivate: [AdminServiceClient]},\n  { path : 'admin/:travelerId' , component: UserEditComponent, canActivate: [AdminServiceClient]},\n  { path : 'admin/create/user' , component: UserCreateComponent, canActivate: [AdminServiceClient]},\n  { path : 'event-list/:tid' , component: EventListComponent, canActivate: [AuthGuard]},\n  { path : 'event-list' , component: MainComponent, canActivate: [AuthGuard]},\n  { path : 'marketer' , component: ProfileMarketerComponent, canActivate: [MarketerServiceClient]},\n  { path : 'browseEvents' , component: EventBrowseComponent},\n  { path : 'event/new' , component: EventNewComponent, canActivate: [AuthGuard]},\n  { path : 'promotion/new' , component: PromotionNewComponent, canActivate: [MarketerServiceClient]},\n  { path : 'promotion/:promotionId' , component: PromotionEditComponent, canActivate: [MarketerServiceClient]},\n  { path : 'event/:eventId/activity' , component: ActivityListComponent},\n  { path : 'event/:eventId/activity/new' , component: ActivityNewComponent, canActivate: [AuthGuard]},\n  { path : 'event/:eventId/:activityId' , component: ActivitysuggestionListComponent, canActivate: [AuthGuard]},\n  { path : 'event/:eventId/:activityId/newSuggestion' , component: ActivitysuggestionNewComponent, canActivate: [AuthGuard]},\n  { path : 'event/:eventId/:activityId/:suggestionId' , component: ActivitysuggestionEditComponent, canActivate: [AuthGuard]},\n  { path : 'following' , component: ViewFollowingComponent, canActivate: [AuthGuard]},\n  { path : 'allTravelers' , component: ViewTravelersComponent, canActivate: [AuthGuard]}\n];\n\n// Export the routes as module providers\nexport const Routing: ModuleWithProviders = RouterModule.forRoot(APP_ROUTES);\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"activityExists\\\">\\n  <h2>\\n    {{activity['activityName']}}\\n  </h2>\\n  <h4>\\n    {{activity['description']}}\\n  </h4>\\n  <div *ngIf=\\\"isEventOwner\\\">\\n    <div>\\n      <a (click)=\\\"showEdit=!showEdit\\\">Edit Activity</a>\\n    </div>\\n    <div *ngIf=\\\"showEdit\\\">\\n      <app-activity-edit></app-activity-edit>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute} from '@angular/router';\nimport {ActivitiesService} from '../../../services/activities.service.client';\nimport {EventService} from '../../../services/event.service.client';\nimport {SharedService} from '../../../services/shared.service.client';\n\n@Component({\n  selector: 'app-activity-details',\n  templateUrl: './activity-details.component.html',\n  styleUrls: ['./activity-details.component.css']\n})\nexport class ActivityDetailsComponent implements OnInit {\n  activity = {};\n  activityExists: boolean;\n  showEdit: boolean;\n  isEventOwner: boolean;\n\n  constructor(private activitiesService: ActivitiesService,\n              private eventService: EventService,\n              private sharedService: SharedService,\n              private activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.isEventOwner = false;\n    this.activityExists = false;\n    this.showEdit = false;\n    this.activatedRoute.params\n      .subscribe((params: any) => {\n        if (params['activityId']) {\n          this.activitiesService.findActivityById(params['activityId'])\n            .subscribe((activity: any) => {\n              this.activity = activity;\n              if (activity) {\n                this.activityExists = true;\n              }\n            });\n          this.eventService.findEventById(params['eventId']).subscribe((theEvent: any) => {\n            if (theEvent) {\n              if (this.sharedService.user['_id'] == theEvent['owner']['_id']) {\n                this.isEventOwner = true;\n              }\n            }\n          });\n        }\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"isEventOwner\\\">\\n  <div *ngIf=\\\"errorFlag\\\"\\n       class=\\\"alert alert-danger\\\">\\n    {{errorMsg}}\\n  </div>\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"activityName\\\">Activity Name</label>\\n      <input placeholder=\\\"Dinner\\\"\\n             id=\\\"activityName\\\"\\n             name=\\\"activityName\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             required\\n             [(ngModel)]=\\\"activityName\\\"/>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"description\\\">Description</label>\\n      <input placeholder=\\\"2017 trip with Alice and Bob\\\"\\n             id=\\\"description\\\"\\n             name=\\\"description\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             required\\n             [(ngModel)]=\\\"description\\\"/>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"startDate\\\">Start Date</label>\\n      <br>\\n      Current: {{startDate | date: 'yyyy-MM-dd' }}\\n      <input   id=\\\"startDate\\\"\\n               name=\\\"startDate\\\"\\n               type=\\\"Date\\\"\\n               class=\\\"form-control\\\"\\n               required\\n               [(ngModel)]=\\\"newStartDate\\\"/>\\n    </div>\\n\\n    <a class=\\\"btn btn-primary btn-block\\\"\\n       (click)=\\\"updateActivity()\\\">Update</a>\\n\\n    <a class=\\\"btn btn-danger btn-block\\\"\\n       (click)=\\\"deleteActivity()\\\">Delete</a>\\n\\n  </form>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivitiesService} from '../../../services/activities.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service.client';\nimport {EventService} from '../../../services/event.service.client';\n\n@Component({\n  selector: 'app-activity-edit',\n  templateUrl: './activity-edit.component.html',\n  styleUrls: ['./activity-edit.component.css']\n})\nexport class ActivityEditComponent implements OnInit {\n  activity: {};\n  activityName: string;\n  description: string;\n  isEventOwner: boolean;\n  startDate: Date;\n  newStartDate: Date;\n  errorFlag: boolean;\n  errorMsg = 'Those fields cannot be blank.';\n\n  constructor(private activitiesService: ActivitiesService,\n              private eventService: EventService,\n              private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private sharedService: SharedService) {\n  }\n\n  ngOnInit() {\n    this.isEventOwner = false;\n    this.activatedRoute.params\n      .subscribe(\n        (params: any) => {\n          this.activitiesService.findActivityById(params['activityId']).subscribe((theActivity: any) => {\n            if (theActivity) {\n              this.activity = theActivity;\n              this.activityName = this.activity['activityName'];\n              this.description = this.activity['description'];\n              this.startDate = this.activity['startDate'];\n            }\n          });\n\n          this.eventService.findEventById(params['eventId']).subscribe((theEvent: any) => {\n            if (theEvent) {\n              if (this.sharedService.user['_id'] == theEvent['owner']['_id']) {\n                this.isEventOwner = true;\n              }\n            }\n          });\n\n        }\n      );\n  }\n\n  updateActivity() {\n    if ((!this.newStartDate) || (this.activityName === '') || (this.description === '')) {\n      this.errorFlag = true;\n    } else {\n      this.activity['activityName'] = this.activityName;\n      this.activity['description'] = this.description;\n      this.activity['startDate'] = new Date(this.newStartDate);\n      this.activity['startDate'].setMinutes(this.activity['startDate'].getMinutes() + this.activity['startDate'].getTimezoneOffset());\n      this.activitiesService.updateActivity(this.activity['_id'], this.activity).subscribe((activity: any) => {\n        window.location.reload();\n      });\n    }\n  }\n\n  deleteActivity() {\n    this.activitiesService.deleteActivity(this.activity['_id']).subscribe((activity: any) => {\n      this.router.navigate(['/main']);\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid header-footer-blue-steel\\\">\\n    <p class=\\\"navbar-text pull-left\\\">\\n      <a [routerLink]=\\\"['/event-list']\\\">\\n        <span class=\\\"glyphicon glyphicon-chevron-left glyphicon-nav header-main-text-color\\\"></span>\\n      </a>\\n    </p>\\n    <p class=\\\"navbar-header pull-left hidden-xs\\\">\\n      <a class=\\\"navbar-brand thick\\\">\\n        <b>Activities: {{event['eventName']}}</b>\\n      </a>\\n    </p>\\n    <p class=\\\"navbar-text pull-right\\\" *ngIf=\\\"isLoggedIn\\\">\\n      <a [routerLink]=\\\"['/event', eventId, 'activity', 'new']\\\">\\n        <span class=\\\"glyphicon glyphicon-plus navbar-link\\\"></span>\\n      </a>\\n    </p>\\n  </div>\\n</nav>\\n\\n<div class=\\\"main-body-content\\\">\\n  <div>\\n    <div class=\\\"col-sm-4\\\">\\n      <app-event-details></app-event-details>\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Users in this event:</h3>\\n        </div>\\n        <div *ngFor=\\\"let traveler of event['travelers']\\\" class=\\\"aj-users-event\\\">\\n          <a>{{traveler.firstName}} {{traveler.lastName}}</a>\\n        </div>\\n      </div>\\n      <div *ngIf=\\\"userIsOwner\\\">\\n        Add Users To This Event:\\n        <br>\\n        <app-search-travelers></app-search-travelers>\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n      <ul class=\\\"list-group\\\">\\n        <h1>Activities</h1>\\n        <li class=\\\"list-group-item\\\" *ngFor=\\\"let activity of activities\\\">\\n          <h4>\\n            <a [routerLink]=\\\"['/event', eventId, activity['_id']]\\\">{{activity.activityName}}</a>\\n            on {{activity['startDate'] | date:'MM-dd-yyyy'}}\\n          </h4>\\n          <div *ngIf=\\\"activity['isDecided']\\\">\\n            Decided Activity:\\n            {{activity['decidedActivity'].activitySuggestionName}}\\n            <br>\\n            {{activity['decidedActivity'].suggestionLocation}}\\n          </div>\\n          <div *ngIf=\\\"!activity['isDecided']\\\">\\n            <a [routerLink]=\\\"['/event', eventId, activity['_id']]\\\">Undecided.  Suggest & Vote.</a>\\n          </div>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {TravelerService} from '../../../services/traveler.service.client';\nimport {ActivatedRoute} from '@angular/router';\nimport {EventService} from '../../../services/event.service.client';\nimport {SharedService} from '../../../services/shared.service.client';\nimport {ActivitiesService} from '../../../services/activities.service.client';\n\n@Component({\n  selector: 'app-activity-list',\n  templateUrl: './activity-list.component.html',\n  styleUrls: ['./activity-list.component.css']\n})\nexport class ActivityListComponent implements OnInit {\n  travelerId: string;\n  activities: [{}];\n  eventId: string;\n  event = {};\n  userIsOwner: boolean;\n  isLoggedIn: boolean;\n  constructor(private eventService: EventService,\n              private activatedRoute: ActivatedRoute,\n              private sharedService: SharedService) {\n  }\n\n  ngOnInit() {\n    this.activatedRoute.params\n      .subscribe((params: any) => {\n        this.eventId = params['eventId'];\n        this.event = this.eventService.findEventById(this.eventId).subscribe((event: any) => {\n          if (event) {\n            this.event = event;\n            if (this.event['owner']['_id'] === this.sharedService.user['_id']) {\n              this.userIsOwner = true;\n            }\n            if (this.event['activities']) {\n              this.activities = this.event['activities'];\n            }\n            if (this.sharedService.user['_id']) {\n              this.isLoggedIn = true;\n            } else {\n              this.isLoggedIn = false;\n            }\n          }\n        });\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar-fixed-top header-footer-blue-steel\\\">\\n  <div class=\\\"nav-header-content\\\">\\n    <div class=\\\"col-sm-3 col-xs-1 nav-padding-zero\\\">\\n      <a [routerLink]=\\\"['/event', eventId, 'activity']\\\" class=\\\"navbar-text-main-theme\\\">\\n        <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n      </a>\\n      <div class=\\\"nav-padding-zero hidden-xs nav-padding-zero navbar-text-main-theme\\\">\\n        <b>New Activity</b>\\n      </div>\\n    </div>\\n    <div class=\\\"col-xs-1 nav-padding-zero pull-right\\\">\\n      <a (click)=\\\"createActivity()\\\" class=\\\"navbar-text-main-theme\\\">\\n        <span class=\\\"glyphicon glyphicon-ok pull-right\\\"></span>\\n      </a>\\n    </div>\\n  </div>\\n</nav>\\n\\n\\n<div class=\\\"container-fluid aj-content-full-height  aj-bump-for-nav\\\">\\n  <div class=\\\"row aj-content-full-height\\\">\\n    <div class=\\\"col-sm-9 col-sm-12 aj-split-content-right\\\">\\n      <div *ngIf=\\\"errorFlag\\\"\\n           class=\\\"alert alert-danger\\\">\\n        {{errorMsg}}\\n      </div>\\n      <form>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"activityname\\\">Activity Name</label>\\n          <input placeholder=\\\"Dinner\\\"\\n                 id=\\\"activityname\\\"\\n                 name=\\\"activityname\\\"\\n                 type=\\\"text\\\"\\n                 class=\\\"form-control\\\"\\n                 required\\n                 [(ngModel)]=\\\"activityname\\\"/>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"description\\\">Description</label>\\n          <input placeholder=\\\"description\\\"\\n                 id=\\\"description\\\"\\n                 name=\\\"description\\\"\\n                 type=\\\"text\\\"\\n                 class=\\\"form-control\\\"\\n                 required\\n                 [(ngModel)]=\\\"description\\\"/>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"startDate\\\">Start Date</label>\\n          <input placeholder=\\\"Date\\\"\\n                 id=\\\"startDate\\\"\\n                 name=\\\"startDate\\\"\\n                 type=\\\"Date\\\"\\n                 class=\\\"form-control\\\"\\n                 required\\n                 [(ngModel)]=\\\"startDate\\\"/>\\n        </div>\\n\\n        <button class=\\\"btn btn-danger btn-block\\\" (click)=\\\"createActivity()\\\" type=\\\"submit\\\">Create Activity\\n        </button>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {TravelerService} from '../../../services/traveler.service.client';\nimport {EventService} from '../../../services/event.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service.client';\nimport {ActivitiesService} from '../../../services/activities.service.client';\n\n@Component({\n  selector: 'app-activity-new',\n  templateUrl: './activity-new.component.html',\n  styleUrls: ['./activity-new.component.css']\n})\nexport class ActivityNewComponent implements OnInit {\n  travelerId: string;\n  eventId: string;\n  activities = [{}];\n  activityname: string;\n  description: string;\n  aNewActivity: any;\n  errorFlag: boolean;\n  startDate: Date;\n  errorMsg = 'Those fields cannot be blank.';\n\n  constructor(private travelerService: TravelerService,\n              private eventService: EventService,\n              private activityService: ActivitiesService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private sharedService: SharedService) {\n  }\n\n  ngOnInit() {\n    this.errorFlag = false;\n    this.activatedRoute.params\n      .subscribe(\n        (params: any) => {\n          this.eventId = params['eventId'];\n          this.activityService.findAllActivitiesForEvent(this.eventId).subscribe((theActivities: any) => {\n            if (theActivities) {\n              this.activities = theActivities;\n            }\n          });\n          this.activityname = '';\n          this.description = '';\n        }\n      );\n  }\n\n  createActivity() {\n    if (this.activityname === '' || this.description === '') {\n      this.errorFlag = true;\n    } else {\n      this.aNewActivity = {\n        activityName: this.activityname,\n        description: this.description, startDate: new Date(this.startDate)\n      };\n      this.aNewActivity['startDate']\n        .setMinutes(this.aNewActivity['startDate']\n          .getMinutes() + this.aNewActivity['startDate']\n          .getTimezoneOffset());\n      this.activityService.createActivity(this.eventId, this.aNewActivity).subscribe((theActivities: any) => {\n        this.router.navigate(['/event', this.eventId, 'activity']);\n      });\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid header-footer-blue-steel\\\">\\n    <p class=\\\"navbar-text pull-left\\\">\\n      <a [routerLink]=\\\"['/event', eventId, 'activity']\\\">\\n        <span class=\\\"glyphicon glyphicon-chevron-left glyphicon-nav header-main-text-color\\\"></span>\\n      </a>\\n    </p>\\n    <p class=\\\"navbar-header pull-left\\\">\\n      <a class=\\\"navbar-brand thick\\\">\\n        <b>Suggestions</b>\\n      </a>\\n    </p>\\n    <p class=\\\"navbar-text pull-right\\\" *ngIf=\\\"isLoggedIn\\\">\\n      <a [routerLink]=\\\"['/event', eventId, activityId, 'newSuggestion']\\\">\\n        <span class=\\\"glyphicon glyphicon-plus navbar-link\\\"></span>\\n      </a>\\n    </p>\\n  </div>\\n</nav>\\n\\n\\n<div class=\\\"main-body-content\\\">\\n  <div class=\\\"aj-pad-for-footer\\\">\\n\\n    <div class=\\\"col-md-2 aj-pad-for-footer\\\">\\n      <app-activity-details></app-activity-details>\\n    </div>\\n\\n    <div class=\\\"col-md-6 aj-pad-for-footer\\\">\\n\\n      <h1>Suggestions</h1>\\n\\n      <div class=\\\"panel panel-warning\\\" *ngFor=\\\"let promotion of promotions\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Promoted Content</h3>\\n        </div>\\n        <li class=\\\"list-group-item\\\">\\n          <strong>{{promotion['suggestionName']}}</strong>\\n          <br>{{promotion['suggestionLocation']}}\\n          <br><a href=\\\"http://{{promotion['businessURL']}}\\\" target=\\\"new\\\">{{promotion['businessName']}}</a>\\n          <br><a (click)=\\\"removePromotionForMe(promotion['_id'])\\\" *ngIf=\\\"isLoggedIn\\\">Remove Promotion</a>\\n        </li>\\n      </div>\\n\\n\\n      <div class=\\\"panel panel-primary\\\" *ngFor=\\\"let suggestion of suggestions\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <span class=\\\"panel-title\\\">Suggestion</span>\\n          <a class=\\\"btn btn-success aj-btn-margin\\\" (click)=\\\"markAsDecided(suggestion['_id'])\\\" *ngIf=\\\"isLoggedIn\\\">Mark as\\n            decided</a>\\n        </div>\\n        <li class=\\\"list-group-item\\\">\\n          <strong>{{suggestion['activitySuggestionName']}}</strong>\\n          <a [routerLink]=\\\"['/event', eventId, activityId, suggestion['_id']]\\\" (click)=\\\"setEdit()\\\"><span\\n            class=\\\"glyphicon glyphicon-cog\\\"></span></a>\\n\\n          <br>Location: {{suggestion['suggestionLocation']}}\\n          <br>Votes: {{suggestion['travelerUpVoters'].length}}\\n          <br>People who voted for this suggestion:\\n          <div *ngFor=\\\"let voter of suggestion['travelerUpVoters']\\\">\\n            {{voter['firstName']}}\\n          </div>\\n\\n          <div *ngIf=\\\"isLoggedIn\\\" class=\\\"aj-btn-margin\\\">\\n            <span>\\n              <a class=\\\"btn btn-primary\\\" (click)=\\\"upVote(suggestion['_id'])\\\">Upvote</a>\\n              <a (click)=\\\"unVote(suggestion['_id'])\\\">Undo Vote</a>\\n            </span>\\n          </div>\\n\\n          <div *ngIf=\\\"!isLoggedIn\\\">\\n            <app-prompt-to-login-or-register></app-prompt-to-login-or-register>\\n          </div>\\n        </li>\\n      </div>\\n\\n\\n      <div *ngIf=\\\"isEventOwner\\\">\\n        <div *ngIf=\\\"errorFlag\\\"\\n             class=\\\"alert alert-danger\\\">\\n          {{errorMsg}}\\n        </div>\\n        <form>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"activitySuggestionName\\\">Suggestion Name</label>\\n            <input placeholder=\\\"McDonalds\\\"\\n                   id=\\\"activitySuggestionName\\\"\\n                   name=\\\"activitySuggestionName\\\"\\n                   type=\\\"text\\\"\\n                   class=\\\"form-control\\\"\\n                   required\\n                   [(ngModel)]=\\\"activitySuggestionName\\\"/>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"suggestionLocation\\\">Location</label>\\n            <input placeholder=\\\"1337 Leet Lane\\\"\\n                   id=\\\"suggestionLocation\\\"\\n                   name=\\\"suggestionLocation\\\"\\n                   type=\\\"text\\\"\\n                   class=\\\"form-control\\\"\\n                   required\\n                   [(ngModel)]=\\\"suggestionLocation\\\"/>\\n          </div>\\n\\n          <a class=\\\"btn btn-primary btn-block\\\"\\n             (click)=\\\"updateSuggestion()\\\">Update</a>\\n\\n          <a class=\\\"btn btn-danger btn-block\\\"\\n             (click)=\\\"deleteSuggestion()\\\">Delete</a>\\n\\n        </form>\\n      </div>\\n\\n    </div>\\n\\n  </div>\\n</div>\\n\\n\\n<app-footer></app-footer>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivitiesService} from '../../../services/activities.service.client';\nimport {EventService} from '../../../services/event.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service.client';\nimport {PromotionService} from '../../../services/promotion.service.client';\nimport {SuggestionService} from '../../../services/suggestion.service.client';\n\n@Component({\n  selector: 'app-activitysuggestion-edit',\n  templateUrl: './activitysuggestion-edit.component.html',\n  styleUrls: ['./activitysuggestion-edit.component.css']\n})\nexport class ActivitysuggestionEditComponent implements OnInit {\n\n  suggestion: {};\n  activityId: string;\n  activitySuggestionName: string;\n  suggestionLocation: string;\n  isEventOwner: boolean;\n  eventId: string;\n  errorFlag: boolean;\n  errorMsg = 'Those fields cannot be blank.';\n  suggestions: any;\n  isLoggedIn: boolean;\n  promotions: any;\n  activity: any;\n  editSuggestionId: string;\n\n  constructor(private activitiesService: ActivitiesService,\n              private eventService: EventService,\n              private router: Router,\n              private promotionService: PromotionService,\n              private activatedRoute: ActivatedRoute,\n              private sharedService: SharedService,\n              private suggestionService: SuggestionService) {\n  }\n\n  ngOnInit() {\n    this.isEventOwner = false;\n    this.isLoggedIn = false;\n    this.activatedRoute.params\n      .subscribe((params: any) => {\n        this.activityId = params['activityId'];\n        this.eventId = params['eventId'];\n        this.editSuggestionId = params['suggestionId'];\n        this.eventService.findEventById(params['eventId']).subscribe((theEvent: any) => {\n          if (theEvent) {\n            if (this.sharedService.user['_id'] == theEvent['owner']['_id']) {\n              this.isEventOwner = true;\n            }\n          }\n        });\n        this.suggestionService.findSuggestionById(params['suggestionId']).subscribe((suggestion: any) => {\n          this.suggestion = suggestion;\n          this.activitySuggestionName = suggestion['activitySuggestionName'];\n          this.suggestionLocation = suggestion['suggestionLocation'];\n        });\n      });\n    this.activitiesService.findAllSuggestionsForActivity(this.activityId).subscribe((allSuggestions: any) => {\n      if (allSuggestions) {\n        this.suggestions = allSuggestions;\n      }\n    });\n\n    this.activitiesService.findActivityById(this.activityId).subscribe((activity: any) => {\n      this.activity = activity;\n      this.promotions = this.activity['promotions'];\n\n      for (let v = 0; v < this.promotions.length; v++) {\n        this.promotions[v]['views'] += 1;\n        this.promotionService.updatePromotion(this.promotions[v]).subscribe((promotion: any) => {\n        });\n      }\n    });\n\n    if (this.sharedService.user['_id']) {\n      this.isLoggedIn = true;\n    }\n  }\n\n  upVote(suggestionId) {\n    this.activitiesService.upVote(this.sharedService.user['_id'], suggestionId).subscribe((suggestion: any) => {\n      this.ngOnInit();\n    });\n  }\n\n  unVote(suggestionId) {\n    this.activitiesService.unVote(this.sharedService.user['_id'], suggestionId).subscribe((suggestion: any) => {\n      this.ngOnInit();\n    });\n  }\n\n  markAsDecided(suggestionId) {\n    this.activitiesService.markAsDecided(this.activityId, suggestionId).subscribe((activity: any) => {\n    });\n  }\n\n  removePromotionForMe(promotionId) {\n    this.promotionService.removePromotionForMe(this.activityId, promotionId)\n      .subscribe((removed: any) => {\n        this.ngOnInit();\n      });\n  }\n\n  updateSuggestion() {\n    if ((this.activitySuggestionName === '') || (this.suggestionLocation === '')) {\n      this.errorFlag = true;\n    } else {\n      this.suggestion['activitySuggestionName'] = this.activitySuggestionName;\n      this.suggestion['suggestionLocation'] = this.suggestionLocation;\n      this.suggestionService.updateSuggestion(this.suggestion['_id'], this.suggestion).subscribe((suggestion: any) => {\n        this.ngOnInit();\n      });\n    }\n  }\n\n  deleteSuggestion() {\n    this.suggestionService.deleteSuggestion(this.activityId, this.suggestion['_id']).subscribe((suggestion: any) => {\n    });\n    this.router.navigate(['/event', this.eventId, this.activityId]);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid header-footer-blue-steel\\\">\\n    <p class=\\\"navbar-text pull-left\\\">\\n      <a [routerLink]=\\\"['/event', eventId, 'activity']\\\">\\n        <span class=\\\"glyphicon glyphicon-chevron-left glyphicon-nav header-main-text-color\\\"></span>\\n      </a>\\n    </p>\\n    <p class=\\\"navbar-header pull-left\\\">\\n      <a class=\\\"navbar-brand thick\\\">\\n        <b>Suggestions</b>\\n      </a>\\n    </p>\\n    <p class=\\\"navbar-text pull-right\\\" *ngIf=\\\"isLoggedIn\\\">\\n      <a [routerLink]=\\\"['/event', eventId, activityId, 'newSuggestion']\\\">\\n        <span class=\\\"glyphicon glyphicon-plus navbar-link\\\"></span>\\n      </a>\\n    </p>\\n  </div>\\n</nav>\\n\\n\\n<div class=\\\"main-body-content\\\">\\n  <div class=\\\"aj-pad-for-footer\\\">\\n\\n    <div class=\\\"col-md-2 aj-pad-for-footer\\\">\\n      <app-activity-details></app-activity-details>\\n    </div>\\n\\n    <div class=\\\"col-md-6 aj-pad-for-footer\\\">\\n\\n      <h1>Suggestions</h1>\\n\\n      <div class=\\\"panel panel-warning\\\" *ngFor=\\\"let promotion of promotions\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">Promoted Content</h3>\\n        </div>\\n        <li class=\\\"list-group-item\\\">\\n          <strong>{{promotion['suggestionName']}}</strong>\\n          <br>{{promotion['suggestionLocation']}}\\n          <br><a href=\\\"http://{{promotion['businessURL']}}\\\" target=\\\"new\\\">{{promotion['businessName']}}</a>\\n          <br><a (click)=\\\"removePromotionForMe(promotion['_id'])\\\" *ngIf=\\\"isLoggedIn\\\">Remove Promotion</a>\\n        </li>\\n      </div>\\n\\n\\n      <div class=\\\"panel panel-primary\\\" *ngFor=\\\"let suggestion of suggestions\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <span class=\\\"panel-title\\\">Suggestion</span>\\n          <a class=\\\"btn btn-success aj-btn-margin\\\" (click)=\\\"markAsDecided(suggestion['_id'])\\\" *ngIf=\\\"isLoggedIn\\\">Mark as decided</a>\\n        </div>\\n        <li class=\\\"list-group-item\\\">\\n          <strong>{{suggestion['activitySuggestionName']}}</strong>\\n          <a [routerLink]=\\\"['/event', eventId, activityId, suggestion['_id']]\\\"><span class=\\\"glyphicon glyphicon-cog\\\"></span></a>\\n\\n          <br>Location: {{suggestion['suggestionLocation']}}\\n          <br>Votes: {{suggestion['travelerUpVoters'].length}}\\n          <br>People who voted for this suggestion:\\n          <div *ngFor=\\\"let voter of suggestion['travelerUpVoters']\\\">\\n            {{voter['firstName']}}\\n          </div>\\n\\n          <div *ngIf=\\\"isLoggedIn\\\" class=\\\"aj-btn-margin\\\">\\n            <span>\\n              <a class=\\\"btn btn-primary\\\" (click)=\\\"upVote(suggestion['_id'])\\\">Upvote</a>\\n              <a (click)=\\\"unVote(suggestion['_id'])\\\">Undo Vote</a>\\n            </span>\\n          </div>\\n\\n          <div *ngIf=\\\"!isLoggedIn\\\">\\n            <app-prompt-to-login-or-register></app-prompt-to-login-or-register>\\n          </div>\\n        </li>\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n\\n\\n<app-footer></app-footer>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivitiesService} from '../../../services/activities.service.client';\nimport {EventService} from '../../../services/event.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service.client';\nimport {PromotionService} from '../../../services/promotion.service.client';\n\n@Component({\n  selector: 'app-activitysuggestion-list',\n  templateUrl: './activitysuggestion-list.component.html',\n  styleUrls: ['./activitysuggestion-list.component.css']\n})\nexport class ActivitysuggestionListComponent implements OnInit {\n  suggestions: any;\n  activityId: string;\n  eventId: string;\n  isEventOwner: boolean;\n  isLoggedIn: boolean;\n  promotions: any;\n  activity: any;\n  editSuggestionId: string;\n  canEdit: boolean;\n  constructor(private activitiesService: ActivitiesService,\n              private eventService: EventService,\n              private router: Router,\n              private promotionService: PromotionService,\n              private activatedRoute: ActivatedRoute,\n              private sharedService: SharedService) {\n  }\n\n  ngOnInit() {\n    this.canEdit = false;\n    this.isEventOwner = false;\n    this.isLoggedIn = false;\n    this.activatedRoute.params\n      .subscribe((params: any) => {\n        this.activityId = params['activityId'];\n        this.eventId = params['eventId'];\n        this.editSuggestionId = params['suggestionId'];\n        if (this.editSuggestionId) {\n          this.canEdit = true;\n        }\n        this.eventService.findEventById(params['eventId']).subscribe((theEvent: any) => {\n          if (theEvent) {\n            if (this.sharedService.user['_id'] == theEvent['owner']['_id']) {\n              this.isEventOwner = true;\n            }\n          }\n        });\n      });\n    this.activitiesService.findAllSuggestionsForActivity(this.activityId).subscribe((allSuggestions: any) => {\n      if (allSuggestions) {\n        this.suggestions = allSuggestions;\n      }\n    });\n\n    this.activitiesService.findActivityById(this.activityId).subscribe((activity: any) => {\n      this.activity = activity;\n      this.promotions = this.activity['promotions'];\n\n      for (let v = 0; v < this.promotions.length; v++) {\n        this.promotions[v]['views'] += 1;\n        this.promotionService.updatePromotion(this.promotions[v]).subscribe((promotion: any) => {});\n      }\n    });\n\n    if (this.sharedService.user['_id']) {\n      this.isLoggedIn = true;\n    }\n  }\n\n  upVote(suggestionId) {\n    this.activitiesService.upVote(this.sharedService.user['_id'], suggestionId).subscribe((suggestion: any) => {\n      this.ngOnInit();\n    });\n  }\n\n  unVote(suggestionId) {\n    this.activitiesService.unVote(this.sharedService.user['_id'], suggestionId).subscribe((suggestion: any) => {\n      this.ngOnInit();\n    });\n  }\n\n  markAsDecided(suggestionId) {\n    this.activitiesService.markAsDecided(this.activityId, suggestionId).subscribe((activity: any) => {\n    });\n  }\n\n  removePromotionForMe(promotionId) {\n    this.promotionService.removePromotionForMe(this.activityId, promotionId)\n      .subscribe((removed: any) => {\n        this.ngOnInit();\n      });\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid header-footer-blue-steel\\\">\\n    <p class=\\\"navbar-text pull-left\\\">\\n      <a [routerLink]=\\\"['/event', eventId, activityId]\\\">\\n        <span class=\\\"glyphicon glyphicon-chevron-left glyphicon-nav header-main-text-color\\\"></span>\\n      </a>\\n    </p>\\n    <p class=\\\"navbar-header pull-left\\\">\\n      <a class=\\\"navbar-brand thick\\\">\\n        <b>Suggestions</b>\\n      </a>\\n    </p>\\n\\n  </div>\\n</nav>\\n\\n<div class=\\\"main-body-content aj-bump-for-nav\\\">\\n\\n  <div>\\n    <div class=\\\"col-sm-4\\\">\\n      Search for a place\\n      <input placeholder=\\\"Golden Gate Bridge\\\"\\n             name=\\\"username\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             required\\n             [(ngModel)]=\\\"searchTerm\\\"/>\\n      <a class=\\\"btn btn-primary btn-block\\\"\\n         (click)=\\\"placesAutoComplete()\\\">Predict</a>\\n\\n\\n      <div class=\\\"row\\\" *ngFor=\\\"let aResult of result\\\">\\n\\n\\n        <div class=\\\"col-xs-9 col-sm-11\\\">\\n          <h3>\\n            {{aResult.description}}\\n          </h3>\\n          <a class=\\\"btn btn-success\\\" (click)=\\\"addSuggestion(aResult.place_id)\\\">Suggest as activity</a>\\n          <a class=\\\"btn\\\"\\n             (click)=\\\"moreDetails(aResult.place_id)\\\">More Details</a>\\n        </div>\\n      </div>\\n\\n    </div>\\n    <div class=\\\"col-sm-8\\\">\\n\\n      <div *ngIf=\\\"detailsFlag\\\">\\n        <h3>\\n          Address: {{details['formatted_address']}}\\n        </h3>\\n        <h4>\\n          {{details['formatted_phone_number']}}\\n        </h4>\\n\\n        <div class=\\\"panel panel-primary\\\">\\n          <div class=\\\"panel-heading\\\">\\n            <h3 class=\\\"panel-title\\\">Users rate this place: {{details['rating']}}</h3>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"panel panel-primary aj-panel-no-border\\\">\\n          <div class=\\\"row pull-middle\\\" *ngFor=\\\"let review of reviews\\\">\\n            <div>\\n              <div class=\\\"col-sm-3 pull-center\\\">\\n                <img src=\\\"{{review.profile_photo_url}}\\\" class=\\\"img-circle\\\"/>\\n              </div>\\n              <div class=\\\"col-sm-9\\\">\\n                <h4>\\n                  {{review.author_name}} rates it a {{review.rating}}\\n                </h4>\\n                <p>\\n                  {{review.text}}\\n                </p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {PlaceService} from '../../../services/place.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ActivitiesService} from '../../../services/activities.service.client';\n\n@Component({\n  selector: 'app-activitysuggestion-new',\n  templateUrl: './activitysuggestion-new.component.html',\n  styleUrls: ['./activitysuggestion-new.component.css']\n})\nexport class ActivitysuggestionNewComponent implements OnInit {\n  activityId: string;\n  eventId: string;\n  searchTerm: string;\n  result: [{}];\n  details: [{}];\n  reviews: [{}];\n  detailsFlag: boolean;\n  aNewSuggestion: any;\n  constructor(private placeService: PlaceService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private activitiesService: ActivitiesService) { }\n  ngOnInit() {\n    this.detailsFlag = false;\n    this.activatedRoute.params\n      .subscribe((params: any) => {\n        this.activityId = params['activityId'];\n        this.eventId = params['eventId'];\n      });\n  }\n\n  placesAutoComplete() {\n    this.placeService.placesAutoComplete(this.searchTerm).subscribe((results: any) => {\n      this.result = results;\n    });\n  }\n\n  addSuggestion(placeid) {\n    this.placeService.moreDetails(placeid).subscribe((details: any) => {\n      this.aNewSuggestion = {activitySuggestionName: details.name, suggestionLocation: details.formatted_address};\n      this.activitiesService.addSuggestion(this.activityId, this.aNewSuggestion)\n        .subscribe((suggestion: any) => {\n          this.router.navigate(['/event', this.eventId, this.activityId]);\n      });\n    });\n  }\n\n  moreDetails(placeid) {\n    this.placeService.moreDetails(placeid).subscribe((details: any) => {\n      this.detailsFlag = true;\n      this.details = details;\n      this.reviews = details.reviews;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid header-footer-blue-steel\\\">\\n    <p class=\\\"navbar-header pull-left\\\">\\n      <a class=\\\"navbar-brand thick\\\">\\n        <b>Welcome {{user['firstName']}}!</b>\\n      </a>\\n    </p>\\n  </div>\\n</nav>\\n\\n\\n<div class=\\\"container main-content\\\">\\n  <span *ngIf=\\\"!loggedIn\\\">\\n    <button class=\\\"btn btn-primary btn-block\\\" [routerLink]=\\\"['/login']\\\"\\n            type=\\\"submit\\\">Login\\n    </button>\\n    <button class=\\\"btn btn-success btn-block\\\" [routerLink]=\\\"['/register']\\\"\\n            type=\\\"submit\\\">Register\\n    </button>\\n  </span>\\n\\n  <span *ngIf=\\\"loggedIn\\\">\\n    <div class=\\\"panel panel-danger\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <h3 class=\\\"panel-title\\\">Users</h3>\\n      </div>\\n\\n      <div *ngFor=\\\"let user of travelers\\\">\\n        <div class=\\\"panel-body aj-panel-border\\\">\\n          {{user['email']}} <a (click)=\\\"deleteTraveler(user)\\\">Delete Account</a>  <a [routerLink]=\\\"['/admin', user['_id']]\\\">Edit Account</a>\\n        </div>\\n      </div>\\n    </div>\\n  </span>\\n\\n  <a class=\\\"btn btn-primary btn-block\\\"\\n     [routerLink]=\\\"['/admin', 'create', 'user']\\\">Create New Account</a>\\n  <span *ngIf=\\\"!loggedIn\\\">\\n    <app-event-browse></app-event-browse>\\n  </span>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service.client';\nimport {TravelerService} from '../../../services/traveler.service.client';\nimport {ActivitiesService} from '../../../services/activities.service.client';\n\n@Component({\n  selector: 'app-admin-main',\n  templateUrl: './admin-main.component.html',\n  styleUrls: ['./admin-main.component.css']\n})\nexport class AdminMainComponent implements OnInit {\n\n  user = {};\n  loggedIn: boolean;\n  travelers: any;\n  activities: any;\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private activitiesService: ActivitiesService,\n              private travelerService: TravelerService,\n              private sharedService: SharedService) {\n  }\n\n  ngOnInit() {\n    this.loggedIn = false;\n    this.user = this.sharedService.user;\n    if (this.sharedService.user['_id']) {\n      this.loggedIn = true;\n    }\n    this.travelerService.findAllTravelers().subscribe((travelers: any) => {\n      this.travelers = travelers;\n    });\n  }\n  deleteTraveler(traveler) {\n    this.travelerService.deleteTraveler(traveler).subscribe((t: any) => {\n      this.ngOnInit();\n    });\n  }\n  deleteActivity(activityId) {\n    this.activitiesService.deleteActivity(activityId).subscribe((t: any) => {\n      this.ngOnInit();\n    });\n  }\n\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid header-footer-blue-steel\\\">\\n\\n    <!--heading on the nav bar-->\\n    <p class=\\\"navbar-header pull-left\\\">\\n      <a class=\\\"navbar-brand thick\\\">\\n        <b>Create New Account</b>\\n      </a>\\n    </p>\\n\\n    <!--tick mark-->\\n    <p class=\\\"navbar-text pull-right\\\">\\n      <a (click)=\\\"createTraveler()\\\" class=\\\"\\\">\\n        <span class=\\\"glyphicon glyphicon-ok navbar-link\\\"></span>\\n      </a>\\n    </p>\\n  </div>\\n</nav>\\n<div class=\\\"container main-content\\\">\\n  <div *ngIf=\\\"errorFlag\\\"\\n       class=\\\"alert alert-danger\\\">\\n    {{errorMsg}}\\n  </div>\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input [(ngModel)]=\\\"email\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"email\\\"\\n             name=\\\"email\\\"\\n      />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input [(ngModel)]=\\\"password\\\"\\n             type=\\\"password\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"password\\\"\\n             name=\\\"password\\\"\\n      />\\n    </div>\\n\\n    <div class=\\\" aj-button-margin\\\">\\n      <a class=\\\"btn btn-success btn-block\\\"\\n         (click)=\\\"createTraveler()\\\" type=\\\"submit\\\">Create Account</a>\\n    </div>\\n  </form>\\n  <div class=\\\" aj-button-margin\\\">\\n    <a class=\\\"btn btn-primary btn-block\\\"\\n       [routerLink]=\\\"['/admin']\\\">Back to admin page</a>\\n  </div>\\n\\n</div>\\n<app-footer></app-footer>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {TravelerService} from '../../../services/traveler.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service.client';\n\n@Component({\n  selector: 'app-user-create',\n  templateUrl: './user-create.component.html',\n  styleUrls: ['./user-create.component.css']\n})\nexport class UserCreateComponent implements OnInit {\n\n  // properties\n  travelerId: string;\n  traveler = {};\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n  phone: string;\n  role: string;\n  dateCreated: Date;\n  monthJoined: any;\n  yearJoined: any;\n  isMarketer: boolean;\n  isTraveler: boolean;\n  errorFlag: boolean;\n  errorMsg = 'Email required. Role must be TRAVELER, MARKETER, or ADMIN';\n\n  constructor(private travelerService: TravelerService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private sharedService: SharedService) {\n  }\n\n  ngOnInit() {\n  }\n\n  createTraveler() {\n    this.travelerService.findTravelerByEmail(this.email).subscribe((traveler: any) => {\n      if (traveler !== null) {\n        this.errorFlag = true;\n      } else if ((this.email === '') || (this.password === '')) {\n        this.errorFlag = true;\n      } else {\n        this.traveler['email'] = this.email;\n        this.traveler['password'] = this.password;\n        this.travelerService.register(this.email, this.password).subscribe((theTraveler: any) => {\n          this.router.navigate(['/admin']);\n        });\n      }\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid header-footer-blue-steel\\\">\\n\\n    <!--heading on the nav bar-->\\n    <p class=\\\"navbar-header pull-left\\\">\\n      <a class=\\\"navbar-brand thick\\\">\\n        <b>Profile</b>\\n      </a>\\n    </p>\\n\\n    <!--tick mark-->\\n    <p class=\\\"navbar-text pull-right\\\">\\n      <a (click)=\\\"updateTraveler()\\\" class=\\\"\\\">\\n        <span class=\\\"glyphicon glyphicon-ok navbar-link\\\"></span>\\n      </a>\\n    </p>\\n  </div>\\n</nav>\\n<div class=\\\"container main-content\\\">\\n  <div *ngIf=\\\"errorFlag\\\"\\n       class=\\\"alert alert-danger\\\">\\n    {{errorMsg}}\\n  </div>\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input [(ngModel)]=\\\"email\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"email\\\"\\n             name=\\\"email\\\"\\n      />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input [(ngModel)]=\\\"password\\\"\\n             type=\\\"password\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"password\\\"\\n             name=\\\"password\\\"\\n      />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"firstName\\\">First Name</label>\\n      <input [(ngModel)]=\\\"firstName\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"firstName\\\"\\n             name=\\\"firstName\\\"\\n      />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"lastName\\\">Last Name</label>\\n      <input [(ngModel)]=\\\"lastName\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"lastName\\\"\\n             name=\\\"lastName\\\"\\n      />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"phone\\\">Phone</label>\\n      <input [(ngModel)]=\\\"phone\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"phone\\\"\\n             name=\\\"phone\\\"\\n      />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"role\\\">Role</label>\\n      <input [(ngModel)]=\\\"role\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"role\\\"\\n             name=\\\"role\\\"\\n      />\\n    </div>\\n  </form>\\n  <a class=\\\"btn btn-primary btn-block\\\"\\n     [routerLink]=\\\"['/admin']\\\">Back to admin page</a>\\n\\n  <a class=\\\"btn btn-danger btn-block\\\"\\n     (click)=\\\"deleteTraveler()\\\">Delete Account</a>\\n  <br>\\n  <p class=\\\"pull-right\\\">Member since {{monthJoined}} / {{yearJoined}}</p>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {TravelerService} from '../../../services/traveler.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service.client';\n\n@Component({\n  selector: 'app-user-edit',\n  templateUrl: './user-edit.component.html',\n  styleUrls: ['./user-edit.component.css']\n})\nexport class UserEditComponent implements OnInit {\n\n  // properties\n  travelerId: string;\n  traveler = {};\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n  phone: string;\n  role: string;\n  dateCreated: Date;\n  monthJoined: any;\n  yearJoined: any;\n  isMarketer: boolean;\n  isTraveler: boolean;\n  errorFlag: boolean;\n  errorMsg = 'Someone else is already registered with that email.';\n\n  constructor(private travelerService: TravelerService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private sharedService: SharedService) {\n  }\n\n  ngOnInit() {\n    this.activatedRoute.params\n      .subscribe(\n        (params: any) => {\n          this.travelerId = params['travelerId'];\n          this.travelerService.findTravelerById(this.travelerId).subscribe((traveler: any) => {\n            this.traveler = traveler;\n            this.travelerId = this.traveler['_id'];\n            this.email = this.traveler['email'];\n            this.firstName = this.traveler['firstName'];\n            this.lastName = this.traveler['lastName'];\n            this.phone = this.traveler['phone'];\n            this.role = this.traveler['role'];\n            this.dateCreated = new Date(this.traveler['dateCreated']);\n            this.monthJoined = this.dateCreated.getMonth();\n            this.yearJoined = this.dateCreated.getFullYear();\n          });\n        }\n      );\n    if (this.sharedService.user['role'] == 'MARKETER') {\n      this.isMarketer = true;\n    }\n    if (this.sharedService.user['role'] == 'TRAVELER') {\n      this.isTraveler = true;\n    }\n  }\n\n  updateTraveler() {\n    this.travelerService.findTravelerByEmail(this.email).subscribe((traveler: any) => {\n      if ((traveler) && (this.email !== '') && (traveler.email == this.sharedService.user['email'])) {\n        this.errorFlag = true;\n      } else {\n        this.traveler['email'] = this.email;\n        this.traveler['firstName'] = this.firstName;\n        this.traveler['lastName'] = this.lastName;\n        this.traveler['phone'] = this.phone;\n        this.traveler['role'] = this.role;\n        this.traveler['password'] = this.password;\n        this.travelerService.updateTraveler(this.travelerId, this.traveler).subscribe((theTraveler: any) => {\n          this.router.navigate(['/admin']);\n        });\n      }\n    });\n  }\n\n  deleteTraveler() {\n    this.travelerService.deleteTraveler(this.traveler).subscribe((theTraveler: any) => {\n      this.router.navigate(['/admin']);\n    });\n  }\n\n  logout() {\n    this.travelerService.logout()\n      .subscribe(\n        (data: any) => this.router.navigate(['/login'])\n      );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid header-footer-blue-steel\\\">\\n\\n    <p class=\\\"navbar-header pull-left\\\">\\n      <a [routerLink]=\\\"['/login']\\\" class=\\\"navbar-brand thick\\\">\\n        Login/Register to start planning a trip!\\n      </a>\\n    </p>\\n  </div>\\n</nav>\\n\\n<div class=\\\"panel panel-danger\\\">\\n  <div class=\\\"panel-heading\\\">\\n    <h3 class=\\\"panel-title\\\">All Events</h3>\\n  </div>\\n  <div *ngFor=\\\"let event of events\\\" class=\\\"aj-users-event\\\">\\n    <a [routerLink]=\\\"['/event', event['_id'], 'activity']\\\">{{event['eventName']}}</a>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {EventService} from '../../../services/event.service.client';\n\n@Component({\n  selector: 'app-event-browse',\n  templateUrl: './event-browse.component.html',\n  styleUrls: ['./event-browse.component.css']\n})\nexport class EventBrowseComponent implements OnInit {\n\n  events = [{}];\n\n  constructor(private eventService: EventService) { }\n\n  ngOnInit() {\n    this.eventService.findAllEvents().subscribe((events: any) => {\n      this.events = events;\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"eventExists\\\">\\n  <h3>{{event['eventName']}}</h3>\\n  <h4>{{event['description']}}</h4>\\n  <h5>Owner: {{event['owner']['email']}}</h5>\\n\\n</div>\\n<div *ngIf=\\\"isEventOwner\\\"><a (click)=\\\"showEdit=!showEdit\\\">Edit event</a></div>\\n<div *ngIf=\\\"showEdit\\\">\\n  <app-event-edit></app-event-edit>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {EventService} from '../../../services/event.service.client';\nimport {ActivatedRoute} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service.client';\n\n@Component({\n  selector: 'app-event-details',\n  templateUrl: './event-details.component.html',\n  styleUrls: ['./event-details.component.css']\n})\nexport class EventDetailsComponent implements OnInit {\n\n  event = {};\n  eventExists: boolean;\n  showEdit: boolean;\n  isEventOwner: boolean;\n  isLoggedIn: boolean;\n  constructor(private eventService: EventService,\n              private activatedRoute: ActivatedRoute,\n              private sharedService: SharedService) {\n  }\n\n  ngOnInit() {\n    this.isLoggedIn = false;\n    this.showEdit = false;\n    this.eventExists = false;\n    this.activatedRoute.params\n      .subscribe((params: any) => {\n        if (params['eventId']) {\n          this.eventService.findEventById(params['eventId'])\n            .subscribe((event: any) => {\n              this.event = event;\n              if (event) {\n                this.eventExists = true;\n                if (this.sharedService.user['_id'] == this.event['owner']['_id']) {\n                  this.isEventOwner = true;\n                }\n              }\n            });\n        }\n      });\n    if (this.sharedService.user['_id']) {\n      this.isLoggedIn = true;\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"isEventOwner\\\">\\n  <div *ngIf=\\\"errorFlag\\\"\\n       class=\\\"alert alert-danger\\\">\\n    {{errorMsg}}\\n  </div>\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"eventname\\\">Event Name</label>\\n      <input placeholder=\\\"Trip to Japan\\\"\\n             id=\\\"eventname\\\"\\n             name=\\\"eventname\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             required\\n             [(ngModel)]=\\\"eventname\\\"/>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"description\\\">Description</label>\\n      <input placeholder=\\\"2017 trip with Alice and Bob\\\"\\n             id=\\\"description\\\"\\n             name=\\\"description\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             required\\n             [(ngModel)]=\\\"description\\\"/>\\n    </div>\\n\\n    <a class=\\\"btn btn-primary btn-block\\\"\\n       (click)=\\\"updateEvent()\\\">Update</a>\\n\\n    <a class=\\\"btn btn-danger btn-block\\\"\\n       (click)=\\\"deleteEvent()\\\">Delete</a>\\n\\n  </form>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {EventService} from '../../../services/event.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service.client';\n\n@Component({\n  selector: 'app-event-edit',\n  templateUrl: './event-edit.component.html',\n  styleUrls: ['./event-edit.component.css']\n})\nexport class EventEditComponent implements OnInit {\n  event: {};\n  eventname: string;\n  description: string;\n  errorFlag: boolean;\n  isEventOwner: boolean;\n  errorMsg = 'Those fields cannot be blank.';\n\n  constructor(private eventService: EventService,\n              private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private sharedService: SharedService) {\n  }\n\n  ngOnInit() {\n    this.isEventOwner = false;\n    this.activatedRoute.params\n      .subscribe(\n        (params: any) => {\n          this.eventService.findEventById(params['eventId']).subscribe((theEvent: any) => {\n            if (theEvent) {\n              this.event = theEvent;\n              this.eventname = this.event['eventName'];\n              this.description = this.event['description'];\n              if (this.sharedService.user['_id'] == this.event['owner']['_id']) {\n                this.isEventOwner = true;\n              }\n            }\n          });\n        }\n      );\n  }\n\n  updateEvent() {\n    this.event['eventName'] = this.eventname;\n    this.event['description'] = this.description;\n    this.eventService.updateEvent(this.event['_id'], this.event).subscribe((event: any) => {\n      window.location.reload();\n    });\n  }\n\n  removeTravelerFromEvent() {\n    this.eventService.removeTravelerFromEvent(this.sharedService.user['_id'], this.event['_id'])\n      .subscribe((event: any) => {\n        this.router.navigate(['/event-list']);\n      });\n  }\n\n  deleteEvent() {\n    this.eventService.deleteEvent(this.event['_id']).subscribe((event: any) => {\n      this.router.navigate(['/main']);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"eventExists\\\">\\n  <div class=\\\"panel panel-danger\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">Your Events</h3>\\n    </div>\\n    <div *ngFor=\\\"let anEvent of events\\\">\\n      <div class=\\\"panel-body aj-panel-border\\\">\\n        <a [routerLink]=\\\"['/event', anEvent['_id'], 'activity']\\\" class=\\\"eventList\\\">{{anEvent['eventName']}}</a>\\n      </div>\\n    </div>\\n    <button class=\\\"btn btn-danger btn-block\\\" [routerLink]=\\\"['/event', 'new']\\\" type=\\\"submit\\\">New Event\\n    </button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {TravelerService} from '../../../services/traveler.service.client';\nimport {ActivatedRoute} from '@angular/router';\nimport {EventService} from '../../../services/event.service.client';\nimport {SharedService} from '../../../services/shared.service.client';\n\n@Component({\n  selector: 'app-event-list',\n  templateUrl: './event-list.component.html',\n  styleUrls: ['./event-list.component.css']\n})\nexport class EventListComponent implements OnInit {\n  travelerId: string;\n  events: [{}];\n  eventExists: boolean;\n  constructor(private travelerService: TravelerService,\n              private eventService: EventService,\n              private activatedRoute: ActivatedRoute,\n              private sharedService: SharedService) { }\n\n  ngOnInit() {\n    this.eventExists = false;\n    this.activatedRoute.params\n      .subscribe(\n        (params: any) => {\n          if (params['tid']) {\n            this.travelerId = params['tid'];\n            this.travelerService.findAllEventsForTraveler(this.travelerId).subscribe((theEvents: any) => {\n              if (theEvents) {\n                this.events = theEvents;\n                this.eventExists = true;\n              }\n            });\n          }\n        }\n      );\n\n    if (this.sharedService.user['_id']) {\n      this.travelerService.findAllEventsForTraveler(this.sharedService.user['_id']).subscribe((theEvents: any) => {\n        if (theEvents) {\n          this.events = theEvents;\n          this.eventExists = true;\n        }\n      });\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar-fixed-top header-footer-blue-steel\\\">\\n  <div class=\\\"nav-header-content\\\">\\n    <div class=\\\"col-sm-3 col-xs-1 nav-padding-zero\\\">\\n      <a [routerLink]=\\\"['/event-list']\\\" class=\\\"navbar-text-main-theme\\\">\\n        <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n      </a>\\n      <div class=\\\"nav-padding-zero hidden-xs nav-padding-zero navbar-text-main-theme\\\">\\n        <b>Events</b>\\n      </div>\\n      <div class=\\\"navbar-split-padding hidden-xs nav-padding-zero pull-right\\\">\\n      </div>\\n    </div>\\n    <div class=\\\"col-sm-8 col-xs-10 nav-padding-zero navbar-text-main-theme\\\">\\n      <b>New Event</b>\\n    </div>\\n    <div class=\\\"col-xs-1 nav-padding-zero\\\">\\n      <a (click)=\\\"createEvent()\\\" class=\\\"navbar-text-main-theme\\\">\\n        <span class=\\\"glyphicon glyphicon-ok pull-right\\\"></span>\\n      </a>\\n    </div>\\n  </div>\\n</nav>\\n\\n\\n<div class=\\\"container-fluid aj-content-full-height\\\">\\n  <div class=\\\"row aj-content-full-height aj-bump-for-nav\\\">\\n    <div class=\\\"col-sm-3 hidden-xs aj-split-content-left\\\">\\n      <app-event-list></app-event-list>\\n    </div>\\n    <div class=\\\"col-sm-9 col-sm-12 aj-split-content-right\\\">\\n      <div *ngIf=\\\"errorFlag\\\"\\n           class=\\\"alert alert-danger\\\">\\n        {{errorMsg}}\\n      </div>\\n      <form>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"eventname\\\">Event Name</label>\\n          <input placeholder=\\\"Trip to Japan\\\"\\n                 id=\\\"eventname\\\"\\n                 name=\\\"eventname\\\"\\n                 type=\\\"text\\\"\\n                 class=\\\"form-control\\\"\\n                 required\\n                 [(ngModel)]=\\\"eventname\\\"/>\\n        </div>\\n      </form>\\n      <form>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"description\\\">Description</label>\\n          <input placeholder=\\\"2017 trip with Alice and Bob\\\"\\n                 id=\\\"description\\\"\\n                 name=\\\"description\\\"\\n                 type=\\\"text\\\"\\n                 class=\\\"form-control\\\"\\n                 required\\n                 [(ngModel)]=\\\"description\\\"/>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {EventService} from '../../../services/event.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {TravelerService} from '../../../services/traveler.service.client';\nimport {SharedService} from '../../../services/shared.service.client';\n\n@Component({\n  selector: 'app-event-new',\n  templateUrl: './event-new.component.html',\n  styleUrls: ['./event-new.component.css']\n})\nexport class EventNewComponent implements OnInit {\n\n  travelerId: string;\n  events = [{}];\n  eventname: string;\n  description: string;\n  aNewEvent: any;\n  errorFlag: boolean;\n  errorMsg = 'Those fields cannot be blank.';\n  constructor(private travelerService: TravelerService,\n              private eventService: EventService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private sharedService: SharedService) { }\n\n  ngOnInit() {\n    this.errorFlag = false;\n    this.activatedRoute.params\n      .subscribe(\n        (params: any) => {\n          this.travelerService.findAllEventsForTraveler(this.sharedService.user['_id']).subscribe((theEvents: any) => {\n            if (theEvents) {\n              this.events = theEvents;\n            }\n          });\n          this.eventname = '';\n          this.description = '';\n        }\n      );\n  }\n  createEvent() {\n    if (this.eventname === '' || this.description === '') {\n      this.errorFlag = true;\n    } else {\n      this.aNewEvent = {eventName: this.eventname,\n        description: this.description, owner: this.sharedService.user['_id']};\n      this.eventService.createEvent(this.sharedService.user['_id'], this.aNewEvent).subscribe((theEvents: any) => {\n        this.router.navigate(['/event-list']);\n      });\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<!-- Footer -->\\n<nav class=\\\"navbar navbar-fixed-bottom header-footer-blue-steel\\\">\\n  <div class=\\\"container-fluid header-footer-blue-steel\\\">\\n\\n    <!--tick mark-->\\n    <p class=\\\"navbar-text pull-right\\\">\\n      <a [routerLink]=\\\"['/traveler']\\\" class=\\\"nav-hover\\\">\\n        <span class=\\\"glyphicon glyphicon-user navbar-link\\\"></span>\\n      </a>\\n    </p>\\n  </div>\\n</nav>\\n<!-- End Footer-->\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"main-content container\\\">\\n  <div class=\\\"col-sm-6\\\">\\n    <h1>\\n      <img class=\\\"img-thumbnail\\\"\\n           src=\\\"http://www.zeepod.io/wp-content/uploads/2017/11/RETIREES1015-family-travel-plans-1.jpg\\\"/>\\n    </h1>\\n    <div class=\\\"pull-center pull-full-width\\\">\\n      <a class=\\\"btn btn-primary btn-block\\\" [routerLink]=\\\"['/login']\\\">Start Planning</a>\\n    </div>\\n  </div>\\n  <div class=\\\"col-sm-6\\\">\\n    <h1>\\n      <a [routerLink]=\\\"['/login']\\\">TravelCord!</a>\\n    </h1>\\n    <p>\\n      Planning a trip and can't keep track of all the ideas and what you are going to do?\\n      TravelCord helps you coordinate activities and suggestions for events. </p>\\n\\n    <div class=\\\"panel-group\\\">\\n      <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <h3 class=\\\"panel-title\\\">\\n            A few of the things you can do\\n          </h3>\\n        </div>\\n        <ul class=\\\"list-group\\\">\\n          <li class=\\\"list-group-item panel-body\\\">\\n            Create events\\n          </li>\\n          <li class=\\\"list-group-item panel-body\\\">\\n            Manage an itinerary of activities\\n          </li>\\n          <li class=\\\"list-group-item panel-body\\\">\\n            Suggest ideas for activities\\n          </li>\\n          <li class=\\\"list-group-item panel-body\\\">\\n            Pull places from Google's API for suggestions\\n          </li>\\n          <li class=\\\"list-group-item panel-body\\\">\\n            Vote and decide on activities.\\n          </li>\\n        </ul>\\n      </div>\\n    </div>\\n\\n\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container main-content pull-center\\\">\\n\\n  <div class=\\\"col-sm-12\\\">\\n    <img class=\\\"img-rounded float-left\\\" alt=\\\"Arnold Esguerra\\\" src=\\\"../../../assets/projectimages/aj.png\\\"/>\\n    <h3>\\n      Arnold \\\"AJ\\\" Esguerra\\n    </h3>\\n    <h4>\\n      <a [routerLink]=\\\"['/travelcord']\\\">Project Main Page</a>\\n    </h4>\\n  </div>\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.css']\n})\nexport class HomepageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid header-footer-blue-steel\\\">\\n    <p class=\\\"navbar-header pull-left\\\">\\n      <a class=\\\"navbar-brand thick\\\">\\n        <span *ngIf=\\\"loggedIn\\\">Welcome {{user['firstName']}}!</span>\\n        <span *ngIf=\\\"!loggedIn\\\"><button class=\\\"btn btn-primary btn-block\\\" [routerLink]=\\\"['/login']\\\"\\n              type=\\\"submit\\\">Login</button>\\n          <button class=\\\"btn btn-success btn-block\\\" [routerLink]=\\\"['/register']\\\"\\n              type=\\\"submit\\\">Register\\n      </button>\\n    </span>\\n      </a>\\n    </p>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container main-content\\\">\\n\\n    <div class=\\\"panel-heading\\\">\\n      <h3 class=\\\"panel-title\\\">Your Promotions\\n        <a [routerLink]=\\\"['/promotion', 'new']\\\">\\n          <span class=\\\"glyphicon glyphicon-plus\\\"></span>\\n        </a>\\n      </h3>\\n    </div>\\n    <app-promotion-list></app-promotion-list>\\n\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {SharedService} from \"../../../services/shared.service.client\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileMarketerComponent implements OnInit {\n\n  user = {};\n  loggedIn: boolean;\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private sharedService: SharedService) { }\n\n  ngOnInit() {\n    this.loggedIn = false;\n    this.user = this.sharedService.user;\n    if (this.sharedService.user['_id']) {\n      this.loggedIn = true;\n    }\n  }\n\n}\n","module.exports = \"agm-map {\\n  height: 300px;\\n}\\n\"","module.exports = \"<div class=\\\"main-body-content\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">\\n      <h1>\\n        Search for a place\\n      </h1>\\n      <input   placeholder=\\\"Golden Gate Bridge\\\"\\n               name=\\\"theSearchTerm\\\"\\n               type=\\\"text\\\"\\n               class=\\\"form-control\\\"\\n               required\\n               [(ngModel)]=\\\"searchTerm\\\"/>\\n      <a class=\\\"btn btn-primary btn-block\\\"\\n         (click)=\\\"placesAutoComplete()\\\">Predict</a>\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n      <div class=\\\"row\\\" *ngFor=\\\"let aResult of result\\\">\\n        <div class=\\\"col-xs-9 col-sm-11\\\">\\n          {{aResult.description}}\\n          <br>\\n          <a class=\\\"btn\\\"\\n             (click)=\\\"moreDetails(aResult.place_id)\\\">\\n            <h4>More Details</h4>\\n          </a>\\n        </div>\\n      </div>\\n    </li>\\n    <li class=\\\"list-group-item\\\">\\n      <div *ngIf=\\\"detailsFlag\\\">\\n        Address: {{details['formatted_address']}}\\n        <br>\\n        OverallRating: {{details['rating']}}\\n        <br>\\n        <br>\\n\\n        <div class=\\\"row\\\" *ngFor=\\\"let review of reviews\\\">\\n          Review by {{review.author_name}} gives a {{review.rating}}\\n          <br>\\n          <img src=\\\"{{review.profile_photo_url}}\\\"/>\\n          <br>\\n          {{review.text}}\\n          <br>\\n          <br>\\n\\n        </div>\\n      </div>\\n    </li>\\n  </ul>\\n</div>\\n\\n<app-footer></app-footer>\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {PlaceService} from '../../services/place.service.client';\nimport {} from '@types/googlemaps';\n\n@Component({\n  selector: 'app-placestest',\n  templateUrl: './placestest.component.html',\n  styleUrls: ['./placestest.component.css']\n})\nexport class PlacestestComponent implements OnInit {\n  searchTerm: string;\n  result: [{}];\n  details: [{}];\n  reviews: [{}];\n  detailsFlag: boolean;\n  constructor(private placeService: PlaceService) { }\n  ngOnInit() {\n    this.detailsFlag = false;\n  }\n\n  placesAutoComplete() {\n    this.placeService.placesAutoComplete(this.searchTerm).subscribe((results: any) => {\n      console.log(results);\n      this.result = results;\n    });\n  }\n\n  moreDetails(placeid) {\n    this.placeService.moreDetails(placeid).subscribe((details: any) => {\n      console.log(details);\n      this.detailsFlag = true;\n      this.details = details;\n      this.reviews = details.reviews;\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar-fixed-top header-footer-blue-steel\\\">\\n\\n  <div class=\\\"nav-header-content\\\">\\n\\n\\n    <div class=\\\"col-sm-3 col-xs-1 nav-padding-zero\\\">\\n\\n      <a [routerLink]=\\\"['/event-list']\\\" class=\\\"navbar-text-main-theme\\\">\\n        <span class=\\\"glyphicon glyphicon-chevron-left\\\"></span>\\n      </a>\\n\\n      <div class=\\\"nav-padding-zero hidden-xs nav-padding-zero navbar-text-main-theme\\\">\\n        <b>Events</b>\\n      </div>\\n\\n      <div class=\\\"navbar-split-padding hidden-xs nav-padding-zero pull-right\\\">\\n        <a [routerLink]=\\\"['/event', 'new']\\\" class=\\\"navbar-text-main-theme nav-padding-zero\\\">\\n          <span class=\\\"glyphicon glyphicon-plus\\\"></span>\\n        </a>\\n      </div>\\n\\n\\n    </div>\\n\\n    <div class=\\\"col-sm-8 col-xs-10 nav-padding-zero navbar-text-main-theme\\\">\\n      <b>New Event</b>\\n    </div>\\n\\n    <div class=\\\"col-xs-1 nav-padding-zero\\\">\\n      <a (click)=\\\"updatePromotion()\\\" class=\\\"navbar-text-main-theme\\\">\\n        <span class=\\\"glyphicon glyphicon-ok pull-right\\\"></span>\\n      </a>\\n    </div>\\n\\n  </div>\\n\\n</nav>\\n\\n\\n<div class=\\\"main-body-content aj-content-full-height\\\">\\n\\n  <div class=\\\"container-fluid aj-content-full-height\\\">\\n\\n    <div class=\\\"row aj-content-full-height\\\">\\n\\n      <div class=\\\"col-sm-3 hidden-xs aj-split-content-left\\\">\\n        <app-promotion-list></app-promotion-list>\\n      </div>\\n\\n      <div class=\\\"col-sm-9 col-sm-12 aj-split-content-right\\\">\\n        <div *ngIf=\\\"errorFlag\\\"\\n             class=\\\"alert alert-danger\\\">\\n          {{errorMsg}}\\n        </div>\\n        <form>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"suggestionName\\\">Promotion Title</label>\\n            <input placeholder=\\\"Eat Great Ramen!\\\"\\n                   id=\\\"suggestionName\\\"\\n                   name=\\\"suggestionName\\\"\\n                   type=\\\"text\\\"\\n                   class=\\\"form-control\\\"\\n                   required\\n                   [(ngModel)]=\\\"suggestionName\\\"/>\\n\\n            <input placeholder=\\\"Fu-unji Ramen\\\"\\n                   id=\\\"businessName\\\"\\n                   name=\\\"businessName\\\"\\n                   type=\\\"text\\\"\\n                   class=\\\"form-control\\\"\\n                   required\\n                   [(ngModel)]=\\\"businessName\\\"/>\\n\\n            <label for=\\\"suggestionLocation\\\">Location</label>\\n            <input placeholder=\\\"127 Tokyo Lane, Tokyo, Japan\\\"\\n                   id=\\\"suggestionLocation\\\"\\n                   name=\\\"suggestionLocation\\\"\\n                   type=\\\"text\\\"\\n                   class=\\\"form-control\\\"\\n                   required\\n                   [(ngModel)]=\\\"suggestionLocation\\\"/>\\n\\n            <label for=\\\"businessURL\\\">Business URL</label>\\n            <input placeholder=\\\"https://www.tripadvisor.com/Restaurant_Review-g1066456-d1679642-Reviews-Fuunji-Shibuya_Tokyo_Tokyo_Prefecture_Kanto.html\\\"\\n                   id=\\\"businessURL\\\"\\n                   name=\\\"suggestionLocation\\\"\\n                   type=\\\"text\\\"\\n                   class=\\\"form-control\\\"\\n                   required\\n                   [(ngModel)]=\\\"businessURL\\\"/>\\n          </div>\\n\\n          <a class=\\\"btn btn-primary btn-block\\\"\\n             (click)=\\\"deployPromotion()\\\">Deploy</a>\\n\\n          <br><br>\\n\\n          <a class=\\\"btn btn-danger btn-block\\\"\\n             (click)=\\\"deletePromotion()\\\">Delete</a>\\n\\n        </form>\\n\\n\\n      </div>\\n\\n\\n    </div>\\n\\n\\n  </div>\\n\\n  <app-footer></app-footer>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {TravelerService} from '../../../services/traveler.service.client';\nimport {EventService} from '../../../services/event.service.client';\nimport {PromotionService} from '../../../services/promotion.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service.client';\n\n@Component({\n  selector: 'app-promotion-edit',\n  templateUrl: './promotion-edit.component.html',\n  styleUrls: ['./promotion-edit.component.css']\n})\nexport class PromotionEditComponent implements OnInit {\n\n  travelerId: string;\n  suggestionName: string;\n  suggestionLocation: string;\n  businessName: string;\n  businessURL: string;\n  thePromotion: any;\n  errorFlag: boolean;\n  errorMsg = 'Those fields cannot be blank.';\n\n  constructor(private travelerService: TravelerService,\n              private eventService: EventService,\n              private promotionService: PromotionService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private sharedService: SharedService) {\n  }\n\n  ngOnInit() {\n    this.errorFlag = false;\n    this.activatedRoute.params\n      .subscribe(\n        (params: any) => {\n          this.promotionService.findPromotionById(params['promotionId'])\n            .subscribe((promotion: any) => {\n              this.thePromotion = promotion;\n              this.suggestionName = this.thePromotion['suggestionName'];\n              this.suggestionLocation = this.thePromotion['suggestionLocation'];\n              this.businessName = this.thePromotion['businessName'];\n              this.businessURL = this.thePromotion['businessURL'];\n            });\n        }\n      );\n  }\n\n  updatePromotion() {\n    if (this.suggestionName === ''\n      || this.suggestionLocation === ''\n      || this.businessName === ''\n      || this.businessURL === '') {\n      this.errorFlag = true;\n    } else {\n      this.thePromotion['suggestionName'] = this.suggestionName;\n      this.thePromotion['suggestionLocation'] = this.suggestionLocation;\n      this.thePromotion['businessName'] = this.businessName;\n      this.thePromotion['businessURL'] = this.businessURL;\n      this.promotionService.updatePromotion(this.thePromotion).subscribe((thePromotion: any) => {\n        this.router.navigate(['/marketer']);\n      });\n    }\n  }\n\n  deletePromotion() {\n    this.promotionService.deletePromotion(this.thePromotion['_id'], this.sharedService.user['_id']).subscribe((thePromotion: any) => {\n      this.router.navigate(['/marketer']);\n    });\n  }\n\n  deployPromotion() {\n    this.promotionService.deployPromotion(this.thePromotion['_id'], this.thePromotion).subscribe((thePromotion: any) => {\n      this.router.navigate(['/marketer']);\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-warning\\\" *ngFor=\\\"let aPromotion of promotions\\\">\\n  <div class=\\\"panel-heading\\\">\\n    <h3 class=\\\"panel-title\\\"><strong><a [routerLink]=\\\"['/promotion', aPromotion['_id']]\\\">{{aPromotion['suggestionName']}}</a></strong></h3>\\n  </div>\\n  <li class=\\\"list-group-item\\\">\\n\\n    <strong>Analytics:</strong>\\n    <br>\\n    <table class=\\\"aj-tablepadding\\\">\\n      <tr>\\n        <td>Views</td>\\n        <td>{{aPromotion['views']}}</td>\\n      </tr>\\n      <tr>\\n        <td>\\n          Number of Activities Suggested to:\\n        </td>\\n        <td>\\n          {{aPromotion['addedToActivitiesTotal']}}\\n        </td>\\n      </tr>\\n    </table>\\n  </li>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {TravelerService} from \"../../../services/traveler.service.client\";\nimport {EventService} from \"../../../services/event.service.client\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {SharedService} from \"../../../services/shared.service.client\";\n\n@Component({\n  selector: 'app-promotion-list',\n  templateUrl: './promotion-list.component.html',\n  styleUrls: ['./promotion-list.component.css']\n})\nexport class PromotionListComponent implements OnInit {\n\n  travelerId: string;\n  traveler: {};\n  promotions: [{}];\n  promotionExists: boolean;\n  isLoggedIn: boolean;\n\n  constructor(private travelerService: TravelerService,\n              private eventService: EventService,\n              private activatedRoute: ActivatedRoute,\n              private sharedService: SharedService) {\n  }\n\n  ngOnInit() {\n    this.promotionExists = false;\n    this.isLoggedIn = false;\n    if (this.sharedService.user['_id']) {\n      if (this.sharedService.user['myPromotions'].length > 0) {\n        this.promotions = this.sharedService.user['myPromotions'];\n        this.promotionExists = true;\n      }\n      this.isLoggedIn = true;\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar-fixed-top header-footer-blue-steel\\\">\\n\\n  <div class=\\\"nav-header-content\\\">\\n\\n\\n    <div class=\\\"col-sm-3 col-xs-1 nav-padding-zero\\\">\\n\\n      <a [routerLink]=\\\"['/marketer']\\\" class=\\\"navbar-text-main-theme\\\">\\n        <span class=\\\"glyphicon glyphicon-chevron-left pull\\\"></span>\\n      </a>\\n\\n      <div class=\\\"nav-padding-zero hidden-xs nav-padding-zero navbar-text-main-theme\\\">\\n        <b>New Promotion</b>\\n      </div>\\n\\n\\n    </div>\\n\\n    <div class=\\\"col-xs-1 nav-padding-zero pull-right\\\">\\n      <a (click)=\\\"createPromotion()\\\" class=\\\"navbar-text-main-theme\\\">\\n        <span class=\\\"glyphicon glyphicon-ok pull-right\\\"></span>\\n      </a>\\n    </div>\\n\\n  </div>\\n\\n</nav>\\n\\n\\n<div class=\\\"main-body-content aj-content-full-height\\\">\\n\\n  <div class=\\\"container-fluid aj-content-full-height\\\">\\n\\n    <div class=\\\"row aj-content-full-height\\\">\\n\\n      <div class=\\\"col-sm-3 hidden-xs aj-split-content-left\\\">\\n        <app-promotion-list></app-promotion-list>\\n      </div>\\n\\n      <div class=\\\"col-sm-9 col-sm-12 aj-split-content-right\\\">\\n        <div *ngIf=\\\"errorFlag\\\"\\n             class=\\\"alert alert-danger\\\">\\n          {{errorMsg}}\\n        </div>\\n        <form>\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"suggestionName\\\">Promotion Title</label>\\n            <input placeholder=\\\"Eat Great Ramen!\\\"\\n                   id=\\\"suggestionName\\\"\\n                   name=\\\"suggestionName\\\"\\n                   type=\\\"text\\\"\\n                   class=\\\"form-control\\\"\\n                   required\\n                   [(ngModel)]=\\\"suggestionName\\\"/>\\n\\n            <input placeholder=\\\"Fu-unji Ramen\\\"\\n                   id=\\\"businessName\\\"\\n                   name=\\\"businessName\\\"\\n                   type=\\\"text\\\"\\n                   class=\\\"form-control\\\"\\n                   required\\n                   [(ngModel)]=\\\"businessName\\\"/>\\n\\n            <label for=\\\"suggestionLocation\\\">Location</label>\\n            <input placeholder=\\\"127 Tokyo Lane, Tokyo, Japan\\\"\\n                   id=\\\"suggestionLocation\\\"\\n                   name=\\\"suggestionLocation\\\"\\n                   type=\\\"text\\\"\\n                   class=\\\"form-control\\\"\\n                   required\\n                   [(ngModel)]=\\\"suggestionLocation\\\"/>\\n\\n            <label for=\\\"businessURL\\\">Business URL</label>\\n            <input placeholder=\\\"https://www.tripadvisor.com/Restaurant_Review-g1066456-d1679642-Reviews-Fuunji-Shibuya_Tokyo_Tokyo_Prefecture_Kanto.html\\\"\\n                   id=\\\"businessURL\\\"\\n                   name=\\\"suggestionLocation\\\"\\n                   type=\\\"text\\\"\\n                   class=\\\"form-control\\\"\\n                   required\\n                   [(ngModel)]=\\\"businessURL\\\"/>\\n          </div>\\n\\n          <a class=\\\"btn btn-success btn-block\\\"\\n             (click)=\\\"createPromotion()\\\">Create Promotion</a>\\n        </form>\\n\\n\\n      </div>\\n\\n\\n    </div>\\n\\n\\n  </div>\\n\\n\\n  <app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {TravelerService} from '../../../services/traveler.service.client';\nimport {EventService} from '../../../services/event.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service.client';\nimport {PromotionService} from '../../../services/promotion.service.client';\n\n@Component({\n  selector: 'app-promotion-new',\n  templateUrl: './promotion-new.component.html',\n  styleUrls: ['./promotion-new.component.css']\n})\nexport class PromotionNewComponent implements OnInit {\n\n  travelerId: string;\n  suggestionName: string;\n  suggestionLocation: string;\n  businessName: string;\n  businessURL: string;\n  aNewPromotion: any;\n  errorFlag: boolean;\n  errorMsg = 'Those fields cannot be blank.';\n  constructor(private travelerService: TravelerService,\n              private eventService: EventService,\n              private promotionService: PromotionService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private sharedService: SharedService) { }\n\n  ngOnInit() {\n    this.errorFlag = false;\n    this.activatedRoute.params\n      .subscribe(\n        (params: any) => {\n        }\n      );\n    this.suggestionName = '';\n    this.suggestionLocation = '';\n    this.businessName = '';\n    this.businessURL = '';\n  }\n  createPromotion() {\n    if (this.suggestionName === ''\n      || this.suggestionLocation === ''\n      || this.businessName === ''\n      || this.businessURL === '') {\n      this.errorFlag = true;\n    } else {\n      this.aNewPromotion = {suggestionName: this.suggestionName,\n        suggestionLocation: this.suggestionLocation,\n        businessName: this.businessName,\n        businessURL: this.businessURL};\n      this.promotionService.createPromotion(this.sharedService.user['_id'], this.aNewPromotion).subscribe((thePromotion: any) => {\n        this.router.navigate(['/marketer']);\n      });\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\">\\n\\n  <h1>Test</h1>\\n\\n  <div *ngIf=\\\"alertMessage\\\"\\n       class=\\\"alert alert-danger\\\">\\n    \\\"Failed to create\\\"\\n  </div>\\n\\n  <div *ngIf=\\\"successMessage\\\"\\n       class=\\\"alert alert-success\\\">\\n    \\\"Succesfully created/deleted\\\"\\n  </div>\\n\\n  <table class=\\\"table\\\">\\n    <thead>\\n    <tr>\\n      <th>Test Message</th>\\n      <th>&nbsp;</th>\\n    </tr>\\n\\n\\n    <tr>\\n      <td>\\n        <input [(ngModel)]=\\\"message\\\"\\n               placeholder=\\\"message\\\"\\n               class=\\\"form-control\\\"/>\\n      </td>\\n\\n\\n      <td>\\n        <button (click)=\\\"createMessage()\\\"\\n                class=\\\"btn btn-primary pull-right\\\">\\n          <span class=\\\"glyphicon glyphicon-plus\\\"></span>\\n        </button>\\n      </td>\\n    </tr>\\n    </thead>\\n\\n\\n    <tbody>\\n    <tr *ngFor=\\\"let message of messages\\\">\\n      <td>\\n        {{message.message}}\\n      </td>\\n      <td>\\n        <button (click)=\\\"deleteMessage(message._id)\\\"\\n                class=\\\"btn btn-danger pull-right\\\">\\n          <span class=\\\"glyphicon glyphicon-remove\\\"></span>\\n        </button>\\n      </td>\\n    </tr>\\n    </tbody>\\n  </table>\\n\\n</div>\\n\\n\\n\"","import { Component, OnInit, Injectable } from '@angular/core';\nimport {TestService} from '../../services/test.service.client';\n\n\n\n@Component({\n  selector: 'app-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.css']\n})\nexport class TestComponent implements OnInit {\n\n  constructor(private _testService: TestService) { }\n\n\n  alertMessage: Boolean = false;\n  successMessage: Boolean = false;\n  message: String;\n  messages: any[] = [];\n  ngOnInit() {\n    this.findAllMessages();\n  }\n  findAllMessages() {\n    return this._testService.findAllMessages()\n      .subscribe(\n        (data: any) => {\n          this.messages = data;\n        }\n      );\n  }\n  createMessage() {\n    return this._testService.createMessage(this.message)\n      .subscribe(\n        (data: any) => {\n          this.successMessage = true;\n          this.ngOnInit();\n          this.message = null;\n        }\n      );\n  }\n  deleteMessage(messageId) {\n    return this._testService.deleteMessage(messageId)\n      .subscribe(\n        (data: any) => {\n          this.successMessage = true;\n          this.ngOnInit();\n        }\n      );\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div *ngIf=\\\"!isLoggedIn\\\">\\n  <a [routerLink]=\\\"['/login']\\\">Login/Register as a traveler to view more</a>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {SharedService} from '../../../services/shared.service.client';\n\n@Component({\n  selector: 'app-prompt-to-login-or-register',\n  templateUrl: './prompt-to-login-or-register.component.html',\n  styleUrls: ['./prompt-to-login-or-register.component.css']\n})\nexport class PromptToLoginOrRegisterComponent implements OnInit {\n  isLoggedIn: boolean;\n  constructor(private sharedService: SharedService) { }\n\n  ngOnInit() {\n    if (this.sharedService.user['_id']) {\n      this.isLoggedIn = true;\n    }\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<form>\\n  <input placeholder=\\\"email\\\"\\n         name=\\\"email\\\"\\n         type=\\\"text\\\"\\n         class=\\\"form-control\\\"\\n         required\\n         [(ngModel)]=\\\"searchTerm\\\"/>\\n  <a class=\\\"btn btn-primary btn-block\\\"\\n     (click)=\\\"findUser()\\\" type=\\\"submit\\\">Find User</a>\\n</form>\\n<div *ngIf=\\\"userSearched\\\">\\n  <div *ngIf=\\\"firstNameExists\\\">\\n    First Name: {{travelerSearchedFor.firstName}}\\n  </div>\\n  <div *ngIf=\\\"lastNameExists\\\">\\n    Last Name: {{travelerSearchedFor.lastName}}\\n  </div>\\n  Email: {{travelerSearchedFor.email}}\\n  <br>\\n  <div *ngIf=\\\"canAddToEvent\\\">\\n    <a class=\\\"btn btn-primary aj-button-margin\\\" (click)=\\\"addUserToEvent()\\\">Add to event</a>\\n  </div>\\n  <a class=\\\"btn btn-primary aj-button-margin\\\" (click)=\\\"follow(travelerSearchedFor['_id'])\\\">Follow</a>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {TravelerService} from '../../../services/traveler.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {EventService} from '../../../services/event.service.client';\nimport {SharedService} from '../../../services/shared.service.client';\n\n@Component({\n  selector: 'app-search-travelers',\n  templateUrl: './search-travelers.component.html',\n  styleUrls: ['./search-travelers.component.css']\n})\nexport class SearchTravelersComponent implements OnInit {\n  searchTerm: string;\n  userSearched: boolean;\n  travelerSearchedFor: any;\n  event: {};\n  canAddToEvent: boolean;\n  firstNameExists: boolean;\n  lastNameExists: boolean;\n\n  constructor(private travelerService: TravelerService,\n              private eventService: EventService,\n              private sharedService: SharedService,\n              private router: Router,\n              private activatedRoute: ActivatedRoute) {\n  }\n\n  ngOnInit() {\n    this.userSearched = false;\n    this.canAddToEvent = false;\n    this.firstNameExists = false;\n    this.lastNameExists = false;\n    this.activatedRoute.params\n      .subscribe(\n        (params: any) => {\n          if (params['eventId']) {\n            this.eventService.findEventById(params['eventId']).subscribe((event: any) => {\n              this.event = event;\n            });\n          }\n        }\n      );\n  }\n\n  findUser() {\n    this.travelerService.findTravelerByEmail(this.searchTerm).subscribe((traveler: any) => {\n      this.travelerSearchedFor = traveler;\n      if (traveler) {\n        if (this.travelerSearchedFor['firstName']) {\n          this.firstNameExists = true;\n        }\n        if (this.travelerSearchedFor['lastName']) {\n          this.lastNameExists = true;\n        }\n        this.userSearched = true;\n        if (this.event) {\n          this.canAddToEvent = true;\n        }\n      }\n    });\n  }\n\n  addUserToEvent() {\n    this.eventService.addTravelerToEvent(this.travelerSearchedFor['_id'], this.event['_id']).subscribe((event: any) => {\n      window.location.reload();\n    });\n  }\n\n  follow(personToFollow) {\n    this.travelerService.follow(this.sharedService.user['_id'], personToFollow)\n      .subscribe((traveler: any) => {\n        window.location.reload();\n      });\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-primary\\\">\\n\\n  <div class=\\\"panel-heading\\\">\\n    <h3 class=\\\"panel-title\\\">Following</h3>\\n  </div>\\n\\n  <div class=\\\"list-group-item\\\" *ngFor=\\\"let anotherTraveler of followingUsers\\\">\\n    {{anotherTraveler['firstName']}} {{anotherTraveler['lastName']}}\\n  </div>\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {TravelerService} from '../../../services/traveler.service.client';\nimport {SharedService} from '../../../services/shared.service.client';\n\n@Component({\n  selector: 'app-view-following',\n  templateUrl: './view-following.component.html',\n  styleUrls: ['./view-following.component.css']\n})\nexport class ViewFollowingComponent implements OnInit {\n  following: string[];\n  followingUsers = [];\n  traveler: {};\n\n  constructor(private travelerService: TravelerService,\n              private sharedService: SharedService) {\n  }\n\n  ngOnInit() {\n    this.traveler = this.sharedService.user;\n    this.following = this.traveler['following'];\n    if (this.following) {\n      for (let i = 0; i < this.following.length; i++) {\n        this.travelerService.findTravelerById(this.following[i])\n          .subscribe((traveler: any) => {\n            this.followingUsers.push(traveler);\n          });\n      }\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid header-footer-blue-steel\\\">\\n\\n    <p class=\\\"navbar-text pull-left\\\">\\n      <a [routerLink]=\\\"['/traveler']\\\">\\n        <span class=\\\"glyphicon glyphicon-chevron-left glyphicon-nav header-main-text-color\\\"></span>\\n      </a>\\n    </p>\\n\\n\\n    <p class=\\\"navbar-header pull-left\\\">\\n\\n    </p>\\n\\n    <!--tick mark-->\\n    <p class=\\\"navbar-text pull-right\\\">\\n      <a [routerLink]=\\\"['/event', 'new']\\\">\\n        <span class=\\\"glyphicon glyphicon-plus navbar-link\\\"></span>\\n      </a>\\n    </p>\\n  </div>\\n</nav>\\n\\n\\n<div class=\\\"main-body-content\\\">\\n  <ul class=\\\"list-group\\\">\\n\\n    Click a traveler to see their events\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let anotherTraveler of travelers\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-xs-9 col-sm-11\\\">\\n\\n\\n          <a [routerLink]=\\\"['/event-list', anotherTraveler['_id']]\\\">FirstName: {{anotherTraveler['firstName']}}</a> ||\\n          <a (click)=\\\"follow(anotherTraveler['_id'])\\\">Follow</a>\\n        </div>\\n        <div class=\\\"col-xs-3 col-sm-1 website-list-icon website-page-icons\\\">\\n\\n        </div>\\n      </div>\\n    </li>\\n  </ul>\\n</div>\\n\\n\\n<!-- Footer -->\\n<nav class=\\\"navbar navbar-fixed-bottom header-footer-blue-steel\\\">\\n  <div class=\\\"container-fluid header-footer-blue-steel\\\">\\n\\n    <!--tick mark-->\\n    <p class=\\\"navbar-text pull-right\\\">\\n      <a [routerLink]=\\\"['/traveler']\\\" class=\\\"nav-hover\\\">\\n        <span class=\\\"glyphicon glyphicon-user navbar-link\\\"></span>\\n      </a>\\n    </p>\\n  </div>\\n</nav>\\n<!-- End Footer-->\\n\"","import { Component, OnInit } from '@angular/core';\nimport {TravelerService} from '../../../services/traveler.service.client';\nimport {SharedService} from '../../../services/shared.service.client';\n\n@Component({\n  selector: 'app-view-travelers',\n  templateUrl: './view-travelers.component.html',\n  styleUrls: ['./view-travelers.component.css']\n})\nexport class ViewTravelersComponent implements OnInit {\n  travelers: [{}];\n  travelerId: string;\n  constructor(private travelerService: TravelerService,\n              private sharedService: SharedService) {\n  }\n\n  ngOnInit() {\n    this.travelerService.findAllTravelers()\n      .subscribe((travelers: any) => {\n      this.travelers = travelers;\n      });\n    this.travelerId = this.sharedService.user['_id'];\n  }\n\n  follow(personToFollow) {\n    this.travelerService.follow(this.travelerId, personToFollow)\n      .subscribe((traveler: any) => {\n      });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container main-content login-image aj-full-page\\\">\\n  <div *ngIf=\\\"errorFlag\\\"\\n       class=\\\"alert alert-danger\\\">\\n    {{errorMsg}}\\n  </div>\\n\\n  <form>\\n    <input placeholder=\\\"email\\\"\\n           name=\\\"email\\\"\\n           type=\\\"text\\\"\\n           class=\\\"form-control\\\"\\n           required\\n           [(ngModel)]=\\\"email\\\"/>\\n\\n    <input placeholder=\\\"password\\\"\\n           name=\\\"password\\\"\\n           type=\\\"password\\\"\\n           class=\\\"form-control\\\"\\n           [(ngModel)]=\\\"password\\\"\\n           required/>\\n\\n    <button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"login(email, password)\\\"\\n            type=\\\"submit\\\">Login!\\n    </button>\\n  </form>\\n  <button class=\\\"btn btn-success btn-block\\\" [routerLink]=\\\"['/register']\\\"\\n          type=\\\"submit\\\">Register\\n  </button>\\n\\n  <button class=\\\"btn btn-success btn-block\\\" [routerLink]=\\\"['/main']\\\"\\n          type=\\\"submit\\\">Continue without logging in...\\n  </button>\\n\\n</div>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {TravelerService} from '../../../services/traveler.service.client';\nimport {SharedService} from '../../../services/shared.service.client';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  // properties\n  email: any;\n  password: any;\n  errorFlag: boolean;\n  errorMsg = 'Invalid email or password !';\n  traveler: any;\n  userType: string;\n\n  constructor(private travelerService: TravelerService,\n              private router: Router,\n              private sharedService: SharedService) {\n  }\n\n  ngOnInit() {\n    this.errorFlag = false;\n    this.email = '';\n    this.password = '';\n  }\n\n  login(email: string, password: string) {\n    this.email = email;\n    this.password = password;\n    if (this.email === '' || this.password === '') {\n      this.errorFlag = true;\n    } else {\n      this.travelerService.login(this.email, this.password)\n        .subscribe((traveler: any) => {\n          this.sharedService.user = traveler;\n          if (this.sharedService.user['role'] === 'MARKETER') {\n            this.router.navigate(['/marketer']);\n          } else if (this.sharedService.user['role'] === 'ADMIN') {\n            this.router.navigate(['/admin']);\n          } else {\n            this.router.navigate(['/event-list']);\n          }\n        });\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid header-footer-blue-steel\\\">\\n    <p class=\\\"navbar-header pull-left\\\">\\n      <a class=\\\"navbar-brand thick\\\">\\n        <b>Welcome {{user['firstName']}}!</b>\\n      </a>\\n    </p>\\n  </div>\\n</nav>\\n\\n\\n<div class=\\\"container main-content\\\">\\n  <span *ngIf=\\\"!loggedIn\\\">\\n    <button class=\\\"btn btn-primary btn-block\\\" [routerLink]=\\\"['/login']\\\"\\n            type=\\\"submit\\\">Login\\n    </button>\\n    <button class=\\\"btn btn-success btn-block\\\" [routerLink]=\\\"['/register']\\\"\\n            type=\\\"submit\\\">Register\\n    </button>\\n  </span>\\n\\n  <span *ngIf=\\\"loggedIn\\\">\\n    <app-event-list></app-event-list>\\n    <app-view-following></app-view-following>\\n    <app-search-travelers></app-search-travelers>\\n  </span>\\n  <span *ngIf=\\\"!loggedIn\\\">\\n    <app-event-browse></app-event-browse>\\n  </span>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service.client';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n  user = {};\n  loggedIn: boolean;\n  constructor(private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private sharedService: SharedService) { }\n\n  ngOnInit() {\n    this.loggedIn = false;\n    this.user = this.sharedService.user;\n    if (this.sharedService.user['_id']) {\n      this.loggedIn = true;\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"\\n<nav class=\\\"navbar navbar-fixed-top\\\">\\n  <div class=\\\"container-fluid header-footer-blue-steel\\\">\\n\\n    <!--heading on the nav bar-->\\n    <p class=\\\"navbar-header pull-left\\\">\\n      <a class=\\\"navbar-brand thick\\\">\\n        <b>Profile</b>\\n      </a>\\n    </p>\\n\\n    <!--tick mark-->\\n    <p class=\\\"navbar-text pull-right\\\">\\n      <a (click)=\\\"updateTraveler()\\\" class=\\\"\\\">\\n        <span class=\\\"glyphicon glyphicon-ok navbar-link\\\"></span>\\n      </a>\\n    </p>\\n  </div>\\n</nav>\\n<div class=\\\"container main-content\\\">\\n  <div *ngIf=\\\"errorFlag\\\"\\n       class=\\\"alert alert-danger\\\">\\n    {{errorMsg}}\\n  </div>\\n  <form>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input [(ngModel)]=\\\"email\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"email\\\"\\n             name=\\\"email\\\"\\n             />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"firstName\\\">First Name</label>\\n      <input [(ngModel)]=\\\"firstName\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"firstName\\\"\\n             name=\\\"firstName\\\"\\n             />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"lastName\\\">Last Name</label>\\n      <input [(ngModel)]=\\\"lastName\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"lastName\\\"\\n             name=\\\"lastName\\\"\\n             />\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"phone\\\">Phone</label>\\n      <input [(ngModel)]=\\\"phone\\\"\\n             type=\\\"text\\\"\\n             class=\\\"form-control\\\"\\n             id=\\\"phone\\\"\\n             name=\\\"phone\\\"\\n      />\\n    </div>\\n  </form>\\n  <div *ngIf=\\\"isTraveler\\\">\\n    <a class=\\\"btn btn-primary btn-block\\\"\\n       [routerLink]=\\\"['/event-list']\\\">View Your Events</a>\\n  </div>\\n\\n  <div *ngIf=\\\"isMarketer\\\">\\n    <a class=\\\"btn btn-primary btn-block\\\"\\n       [routerLink]=\\\"['/marketer']\\\">View Your Promotions</a>\\n  </div>\\n  <p>\\n    <strong>Manage Account:</strong>\\n  </p>\\n  <a class=\\\"btn btn-danger btn-block\\\"\\n     (click)=\\\"logout()\\\">Logout</a>\\n  <a class=\\\"btn btn-danger btn-block\\\"\\n     (click)=\\\"deleteTraveler()\\\">Delete Account</a>\\n<br>\\n  <p class=\\\"pull-right\\\">Member since {{monthJoined}} / {{yearJoined}}</p>\\n</div>\\n\\n<app-footer></app-footer>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {TravelerService} from '../../../services/traveler.service.client';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service.client';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  // properties\n  travelerId: string;\n  traveler = {};\n  email: string;\n  firstName: string;\n  lastName: string;\n  password: string;\n  phone: string;\n  dateCreated: Date;\n  monthJoined: any;\n  yearJoined: any;\n  isMarketer: boolean;\n  isTraveler: boolean;\n  errorFlag: boolean;\n  errorMsg = 'Someone else is already registered with that email.';\n\n  constructor(private travelerService: TravelerService,\n              private activatedRoute: ActivatedRoute,\n              private router: Router,\n              private sharedService: SharedService) {\n  }\n\n  ngOnInit() {\n    this.isMarketer = false;\n    this.isTraveler = false;\n    this.traveler = this.sharedService.user;\n    this.travelerId = this.traveler['_id'];\n    this.email = this.traveler['email'];\n    this.firstName = this.traveler['firstName'];\n    this.lastName = this.traveler['lastName'];\n    this.phone = this.traveler['phone'];\n    this.dateCreated = new Date(this.traveler['dateCreated']);\n    this.monthJoined = this.dateCreated.getMonth();\n    this.yearJoined = this.dateCreated.getFullYear();\n    if (this.sharedService.user['role'] == 'MARKETER') {\n      this.isMarketer = true;\n    }\n    if (this.sharedService.user['role'] == 'TRAVELER') {\n      this.isTraveler = true;\n    }\n  }\n\n  updateTraveler() {\n    this.travelerService.findTravelerByEmail(this.email).subscribe((traveler: any) => {\n      if ((traveler) && (traveler.email !== this.sharedService.user['email'])) {\n        this.errorFlag = true;\n      } else {\n        this.sharedService.user['email'] = this.email;\n        this.sharedService.user['firstName'] = this.firstName;\n        this.sharedService.user['lastName'] = this.lastName;\n        this.sharedService.user['phone'] = this.phone;\n        this.travelerService.updateTraveler(this.sharedService.user['_id'], this.sharedService.user).subscribe((theTraveler: any) => {\n        });\n      }\n    });\n  }\n\n  deleteTraveler() {\n    this.travelerService.deleteTraveler(this.sharedService.user).subscribe((theTraveler: any) => {\n      this.router.navigate(['/login']);\n    });\n  }\n\n  logout() {\n    this.travelerService.logout()\n      .subscribe(\n        (data: any) => this.router.navigate(['/login'])\n      );\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <h1>Register</h1>\\n  <div *ngIf=\\\"errorFlag\\\"\\n       class=\\\"alert alert-danger\\\">\\n    {{errorMsg}}\\n  </div>\\n  <input placeholder=\\\"email\\\"\\n         name=\\\"email\\\"\\n         type=\\\"text\\\"\\n         class=\\\"form-control\\\"\\n         required\\n         [(ngModel)]=\\\"email\\\"/>\\n  <input name=\\\"password\\\"\\n         type=\\\"password\\\"\\n         class=\\\"form-control\\\"\\n         placeholder=\\\"password\\\"\\n         required\\n         [(ngModel)]=\\\"password\\\"/>\\n  <input name=\\\"vpassword\\\"\\n         type=\\\"password\\\"\\n         placeholder=\\\"verify password\\\"\\n         class=\\\"form-control\\\"\\n         required\\n         [(ngModel)]=\\\"vpassword\\\"/>\\n  <input name=\\\"userType\\\"\\n         id=\\\"traveler\\\"\\n         value=\\\"traveler\\\"\\n         type=\\\"radio\\\"\\n         class=\\\"form-control\\\"\\n         required\\n         [(ngModel)]=\\\"userType\\\"/>\\n  <label for=\\\"traveler\\\">Traveler</label>\\n\\n  <input name=\\\"userType\\\"\\n         id=\\\"marketer\\\"\\n         value=\\\"marketer\\\"\\n         type=\\\"radio\\\"\\n         class=\\\"form-control\\\"\\n         required\\n         [(ngModel)]=\\\"userType\\\"/>\\n  <label for=\\\"marketer\\\">Marketer</label>\\n\\n  <div [ngSwitch]=\\\"userType\\\">\\n    <div *ngSwitchCase=\\\"'traveler'\\\">\\n      <a class=\\\"btn btn-primary btn-block\\\"\\n         (click)=\\\"register()\\\">Register as Traveler</a>\\n    </div>\\n    <div *ngSwitchCase=\\\"'marketer'\\\">\\n      <a class=\\\"btn btn-primary btn-block\\\"\\n         (click)=\\\"registerAsMarketer()\\\">Register as Marketer</a>\\n    </div>\\n  </div>\\n  <a class=\\\"btn btn-danger btn-block\\\"\\n     [routerLink]=\\\"['/login']\\\">Cancel</a>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {TravelerService} from '../../../services/traveler.service.client';\nimport {Router} from '@angular/router';\nimport {SharedService} from '../../../services/shared.service.client';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  // properties\n  email: string;\n  password: string;\n  vpassword: string;\n  errorFlag: boolean;\n  errorMsg = 'Invalid!';\n  anExistingTraveler: any;\n  anExistingMarketer: any;\n  userType: string;\n  aNewTraveler: any;\n\n  constructor(private travelerService: TravelerService,\n              private router: Router,\n              private sharedService: SharedService) {\n  }\n\n  ngOnInit() {\n    this.errorFlag = false;\n    this.email = '';\n    this.password = '';\n    this.vpassword = '';\n  }\n\n  register() {\n    this.travelerService.findTravelerByEmail(this.email).subscribe((traveler: any) => {\n      this.anExistingTraveler = traveler;\n      if (this.anExistingTraveler !== null) {\n        this.errorFlag = true;\n      } else if (this.password === '' || this.email === '') {\n        this.errorFlag = true;\n      } else if (this.password !== this.vpassword) {\n        this.errorFlag = true;\n      } else {\n        this.travelerService.register(this.email, this.password).subscribe((aTraveler: any) => {\n          this.sharedService.user = aTraveler;\n          this.router.navigate(['/traveler']);\n        });\n      }\n    });\n  }\n\n  registerAsMarketer() {\n    this.travelerService.findTravelerByEmail(this.email).subscribe((traveler: any) => {\n      this.anExistingTraveler = traveler;\n      if (this.anExistingTraveler !== null) {\n        this.errorFlag = true;\n      } else if (this.password === '' || this.email === '') {\n        this.errorFlag = true;\n      } else if (this.password !== this.vpassword) {\n        this.errorFlag = true;\n      } else {\n        this.travelerService.register(this.email, this.password).subscribe((aTraveler: any) => {\n          this.sharedService.user = aTraveler;\n          this.sharedService.user['role'] = 'MARKETER';\n          this.travelerService.updateTraveler(this.sharedService.user['_id'], this.sharedService.user)\n            .subscribe((aMarketer: any) => {\n              this.router.navigate(['/marketer']);\n            });\n        });\n      }\n    });\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Http, Response} from '@angular/http';\nimport 'rxjs/Rx';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class ActivitiesService {\n  baseUrl = environment.baseUrl;\n  constructor(private http: Http) {}\n  createActivity(eventId, activity) {\n    const url = this.baseUrl + '/api/activity/' + eventId + '/newActivity';\n    return this.http.post(url, activity).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  findAllActivitiesForEvent(eventId) {\n    const url = this.baseUrl + '/api/activity/' + eventId + '/allActivities';\n    const activities = [];\n    return this.http.get(url).map((response: Response) => {\n      for (let i = 0; i < response.json().length; i++) {\n        const url2 = this.baseUrl + '/api/activity/' + response.json()[i];\n        this.http.get(url2).subscribe((response2: Response) => {\n          activities.push(response2.json());\n        });\n      }\n      return activities;\n    });\n  }\n\n  findActivityById(activityId) {\n    const url = this.baseUrl + '/api/activity/' + activityId;\n    return this.http.get(url).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  findAllActivities() {\n    const url = this.baseUrl + '/api/activity/findAllActivities';\n    return this.http.get(url).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  addSuggestion(activityId, suggestion) {\n    const url = this.baseUrl + '/api/suggestion/' + activityId;\n    return this.http.post(url, suggestion).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  findAllSuggestionsForActivity(activityId) {\n    const url = this.baseUrl + '/api/activity/' + activityId;\n    return this.http.get(url).map((response: Response) => {\n      return response.json().activitySuggestions;\n    });\n  }\n\n  upVote(travelerId, suggestionId) {\n    const url = this.baseUrl + '/api/suggestion/upvote/' + suggestionId + '/' + travelerId;\n    return this.http.post(url, suggestionId).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  unVote(travelerId, suggestionId) {\n    const url = this.baseUrl + '/api/suggestion/unvote/' + suggestionId + '/' + travelerId;\n    return this.http.post(url, suggestionId).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  markAsDecided(activityId, suggestionId) {\n    const url = this.baseUrl + '/api/activity/' + activityId + '/markDecision/' + suggestionId;\n    return this.http.post(url, suggestionId).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  updateActivity(activityId, activity)  {\n    const url = this.baseUrl + '/api/activity/' + activityId;\n    return this.http.put(url, activity).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  deleteActivity(activityId) {\n    const url = this.baseUrl + '/api/activity/' + activityId;\n    return this.http.delete(url, activityId).map((response: Response) => {\n      return response.json();\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate} from '@angular/router';\nimport {UserService} from './user.service.client';\nimport {TravelerService} from './traveler.service.client';\n\n@Injectable()\nexport class AdminServiceClient implements CanActivate {\n  constructor(private travelerService: TravelerService) {}\n  canActivate() {\n    return this.travelerService.isAdmin();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {TravelerService} from './traveler.service.client';\nimport {SharedService} from './shared.service.client';\n\n@Injectable()\nexport class AllUsersGuardService implements CanActivate {\n\n  constructor(private travelerService: TravelerService,\n              private router: Router,\n              private sharedService: SharedService) {}\n\n  canActivate() {\n    return this.travelerService.loggedIn();\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {TravelerService} from './traveler.service.client';\nimport {SharedService} from './shared.service.client';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n  constructor(private travelerService: TravelerService,\n              private router: Router,\n              private sharedService: SharedService) {}\n\n  canActivate() {\n    return (this.travelerService.loggedIn()\n      && this.travelerService.isTraveler());\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Http, Response} from '@angular/http';\nimport 'rxjs/Rx';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class EventService {\n  baseUrl = environment.baseUrl;\n  constructor(private http: Http) {}\n  createEvent(travelerId, event) {\n    const url = this.baseUrl + '/api/event/' + travelerId + '/newevent';\n    return this.http.post(url, event).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  findAllEvents() {\n    const url = this.baseUrl + '/api/event/findAllEvents';\n    return this.http.get(url).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  findAllEventsForTraveler(travelerId) {\n    const url = this.baseUrl + '/api/traveler/' + travelerId + '/event';\n    return this.http.get(url).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  findEventById(eventId) {\n    const url = this.baseUrl + '/api/event/' + eventId;\n    return this.http.get(url).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  updateEvent(eventId, event)  {\n    const url = this.baseUrl + '/api/event/' + eventId;\n    return this.http.put(url, event).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  deleteEvent(eventId) {\n    const url = this.baseUrl + '/api/event/' + eventId;\n    return this.http.delete(url, eventId).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  removeTravelerFromEvent(travelerId, eventId) {\n    const url = this.baseUrl + '/api/event/' + eventId + '/' + travelerId;\n    return this.http.delete(url, eventId).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  addTravelerToEvent(travelerId, eventId) {\n    const url = this.baseUrl + '/api/event/addTraveler/' + eventId + '/' + travelerId;\n    return this.http.post(url, event).map((response: Response) => {\n      return response.json();\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {CanActivate} from '@angular/router';\nimport {TravelerService} from './traveler.service.client';\nimport {SharedService} from './shared.service.client';\n\n@Injectable()\nexport class MarketerServiceClient implements CanActivate {\n  constructor(private travelerService: TravelerService,\n              private sharedService: SharedService) {}\n  canActivate() {\n    return (this.travelerService.loggedIn()\n      && this.travelerService.isMarketer());\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Http, Response} from '@angular/http';\nimport 'rxjs/Rx';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class PlaceService {\n  baseUrl = environment.baseUrl;\n  constructor(private http: Http) {}\n\n  placesAutoComplete(searchTerm: any) {\n    const url = this.baseUrl + '/api/places/placesAutoComplete/' + searchTerm ;\n    return this.http.get(url).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  moreDetails(placeid: any) {\n    const url = this.baseUrl + '/api/places/details/' + placeid;\n    return this.http.get(url).map((response: Response) => {\n      return response.json();\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Http, Response} from '@angular/http';\nimport 'rxjs/Rx';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class PromotionService {\n  baseUrl = environment.baseUrl;\n\n  constructor(private http: Http) {\n  }\n\n  createPromotion(travelerId, promotion) {\n    const url = this.baseUrl + '/api/promotion/' + travelerId + '/newPromotion';\n    return this.http.post(url, promotion).map((response: Response) => {\n      console.log('back from server');\n      console.log(response.json());\n      return response.json();\n    });\n  }\n\n  findPromotionById(promotionId) {\n    const url = this.baseUrl + '/api/promotion/' + promotionId;\n    return this.http.get(url).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  updatePromotion(promotion) {\n    const url = this.baseUrl + '/api/promotion/update';\n    return this.http.put(url, promotion).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  deletePromotion(promotionId, travelerId) {\n    const url = this.baseUrl + '/api/promotion/delete/' + promotionId + '/' + travelerId;\n    return this.http.delete(url, promotionId).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  deployPromotion(promotionId, promotion) {\n    const url = this.baseUrl + '/api/promotion/deploy/' + promotionId;\n    return this.http.put(url, promotion).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  removePromotionForMe(activityId, promotionId) {\n    const url = this.baseUrl + '/api/promotion/deleteOne/' + promotionId + '/' + activityId;\n    return this.http.delete(url, promotionId).map((response: Response) => {\n      return response.json();\n    });\n  }\n}\n","import {Injectable} from '@angular/core';\n@Injectable()\nexport class SharedService {\n  user = {};\n}\n","import {Injectable} from '@angular/core';\nimport {Http, Response} from '@angular/http';\nimport 'rxjs/Rx';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class SuggestionService {\n  baseUrl = environment.baseUrl;\n  constructor(private http: Http) {}\n\n  findSuggestionById(suggestionId) {\n    const url = this.baseUrl + '/api/suggestion/' + suggestionId;\n    return this.http.get(url).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  updateSuggestion(suggestionId, suggestion)  {\n    const url = this.baseUrl + '/api/suggestion/' + suggestionId;\n    return this.http.put(url, suggestion).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  deleteSuggestion(activityId, suggestionId) {\n    const url = this.baseUrl + '/api/suggestion/' + activityId + '/' + suggestionId;\n    return this.http.delete(url, suggestionId).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n}\n","import {Injectable} from '@angular/core';\nimport {Http, Response} from '@angular/http';\nimport 'rxjs/Rx';\nimport {environment} from '../../environments/environment';\n@Injectable()\n\nexport class TestService {\n\n\n  baseUrl = environment.baseUrl;\n\n  constructor(private _http: Http) {\n  }\n\n  findAllMessages() {\n    console.log(this.baseUrl);\n    return this._http.get(this.baseUrl + '/api/test')\n      .map(\n        (res: Response) => {\n          const data = res.json();\n          return data;\n        }\n      );\n  }\n  createMessage(message) {\n    const obj = {\n      message: message\n    };\n    return this._http.post(this.baseUrl + '/api/test', obj)\n      .map(\n        (res: Response) => {\n          const data = res.json();\n          return data;\n        }\n      );\n  }\n  deleteMessage(messageId) {\n    return this._http.delete(this.baseUrl + '/api/test/' + messageId)\n      .map(\n        (res: Response) => {\n          const data = res.json();\n          return data;\n        }\n      );\n  }\n}\n\n","import {Injectable} from '@angular/core';\nimport {Http, RequestOptions, Response} from '@angular/http';\nimport 'rxjs/Rx';\nimport {environment} from '../../environments/environment';\nimport {EventService} from './event.service.client';\nimport {SharedService} from './shared.service.client';\nimport {Router} from '@angular/router';\n\n@Injectable()\nexport class TravelerService {\n  options: RequestOptions = new RequestOptions();\n  baseUrl = environment.baseUrl;\n\n  constructor(private http: Http,\n              private sharedService: SharedService,\n              private router: Router) {\n  }\n\n  register(email, password) {\n    const url = this.baseUrl + '/api/register';\n    const credentials = {\n      email: email,\n      password: password\n    };\n    this.options.withCredentials = true;\n    return this.http.post(url, credentials, this.options)\n      .map((response: Response) => {\n        return response.json();\n      });\n  }\n\n  login(email, password) {\n    this.options.withCredentials = true;\n    const url = this.baseUrl + '/api/login';\n    const credentials = {\n      email: email,\n      password: password\n    };\n    return this.http.post(url, credentials, this.options)\n      .map((response: Response) => {\n        return response.json();\n      });\n  }\n\n  loggedIn() {\n    this.options.withCredentials = true;\n    return this.http.post(this.baseUrl + '/api/loggedIn', '', this.options)\n      .map(\n        (res: Response) => {\n          const user = res.json();\n          if (user !== 0) {\n            this.sharedService.user = user; // setting user so as to share with all components\n            return true;\n          } else {\n            this.router.navigate(['/login']);\n            return false;\n          }\n        }\n      );\n  }\n\n  logout() {\n    this.options.withCredentials = true;\n    return this.http.post(this.baseUrl + '/api/logout', '', this.options)\n      .map(\n        (res: Response) => {\n          const data = res;\n        }\n      );\n  }\n\n  findTravelerByCredentials(email, password) {\n    const url = this.baseUrl + '/api/traveler?email=' + email + '&password=' + password;\n    return this.http.get(url).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  findAllTravelers() {\n    const url = this.baseUrl + '/api/traveler/all';\n    return this.http.get(url).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  createTraveler(traveler: any) {\n    const url = this.baseUrl + '/api/traveler/';\n    return this.http.post(url, traveler).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  findAllEventsForTraveler(travelerId) {\n    const url = this.baseUrl + '/api/traveler/' + travelerId + '/event';\n    const events = [];\n    // Get the traveler\n    return this.http.get(url).map((response: Response) => {\n      // For each event in the traveler's profile, send another HTTP request to get the event details.\n      for (let i = 0; i < response.json().length; i++) {\n        const url2 = this.baseUrl + '/api/event/' + response.json()[i];\n        this.http.get(url2).subscribe((response2: Response) => {\n          events.push(response2.json());\n        });\n      }\n      return events;\n    });\n  }\n\n  findTravelerById(travelerId) {\n    const url = this.baseUrl + '/api/traveler/' + travelerId;\n    return this.http.get(url).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  findTravelerByEmail(email: string) {\n    const url = this.baseUrl + '/api/traveler?email=' + email;\n    return this.http.get(url).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  follow(travelerId, personToFollow) {\n    const url = this.baseUrl + '/api/traveler/' + travelerId + '/follow/' + personToFollow;\n    return this.http.post(url, personToFollow).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  updateTraveler(travelerId, traveler) {\n    const url = this.baseUrl + '/api/traveler/' + travelerId;\n    return this.http.put(url, traveler).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  deleteTraveler(traveler) {\n    const url = this.baseUrl + '/api/traveler/' + traveler._id;\n    return this.http.delete(url, traveler).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  isAdmin() {\n    const url = this.baseUrl + '/api/admin/isAdmin';\n    this.options.withCredentials = true;\n    return this.http.get(url, this.options)\n      .map((res: Response) => {\n        const user = res.json();\n        if (user !== 0) {\n          this.sharedService.user = user;\n          return true;\n        } else {\n          this.router.navigate(['/login']);\n          return false;\n        }\n      });\n  }\n\n  isMarketer() {\n    const url = this.baseUrl + '/api/traveler/isMarketer';\n    this.options.withCredentials = true;\n    return this.http.get(url, this.options)\n      .map((res: Response) => {\n        const user = res.json();\n        if (user !== 0) {\n          this.sharedService.user = user;\n          return true;\n        } else {\n          this.router.navigate(['/login']);\n          return false;\n        }\n      });\n  }\n\n  isTraveler() {\n    const url = this.baseUrl + '/api/traveler/isTraveler';\n    this.options.withCredentials = true;\n    return this.http.get(url, this.options)\n      .map((res: Response) => {\n        const user = res.json();\n        if (user !== 0) {\n          this.sharedService.user = user;\n          return true;\n        } else {\n          this.router.navigate(['/login']);\n          return false;\n        }\n      });\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {Http, Response} from '@angular/http';\nimport 'rxjs/Rx';\nimport {environment} from '../../environments/environment';\n\n@Injectable()\nexport class UserService {\n  baseUrl = environment.baseUrl;\n  constructor(private http: Http) {}\n\n  findUserByCredentials(username, password) {\n    const url = this.baseUrl + '/api/user?username=' + username + '&password=' + password;\n    return this.http.get(url).map((response: Response) => {\n        return response.json();\n    });\n  }\n  createUser(user: any) {\n    const url = this.baseUrl + '/api/user/';\n    return this.http.post(url, user).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  findUserById(userId: string) {\n    const url = this.baseUrl + '/api/user/' + userId;\n    return this.http.get(url).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  findUserByUsername(username: string) {\n    const url = this.baseUrl + '/api/user?username=' + username;\n    return this.http.get(url).map((response: Response) => {\n      return response.json();\n    });\n  }\n\n  updateUser(userId, user) {\n    const url = this.baseUrl + '/api/user/' + userId;\n    return this.http.put(url, user).map((response: Response) => {\n      return response.json();\n    });\n  }\n  deleteUser(user) {\n    const url = this.baseUrl + '/api/user/' + user._id;\n    return this.http.delete(url, user).map((response: Response) => {\n      return response.json();\n    });\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\n\n\nexport const environment = {\n  production: false,\n  baseUrl : 'http://localhost:3100'\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n"],"sourceRoot":""}